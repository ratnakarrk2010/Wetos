@model WetosMVCMainApp.Models.ManualCompOffModel
@{
    ViewBag.Title = "Extra Working Entry Create";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@* Added by Shraddha on 09 SEP 2017 for Data masking, START *@
<script src="@Url.Content("~/Scripts/jquery.inputmask.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.inputmask.date.extensions.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.inputmask.extensions.js")" type="text/javascript"></script>
@* Added by Shraddha on 09 SEP 2017 for Data masking, END *@ @* Added by Shalaka on 28th NOV 2017 for Date Picker -- Start*@
@System.Web.Optimization.Styles.Render("~/Content/DatePicker")
@System.Web.Optimization.Scripts.Render("~/bundles/DatePicker")
@System.Web.Optimization.Styles.Render("~/Content/Select2")
@System.Web.Optimization.Scripts.Render("~/bundles/Select2")
@* Added by Shalaka on 28th NOV 2017 for Date Picker -- Start*@
<div class="page-content-wrapper" id="page_content">
    <div class="page-content">
        <section class="content-header">
      <h1>
       Extra Working Entry
        <small>Apply</small>
      </h1>
    
      <div class="row">
                <div class="col-md-12">
                    <ul class="page-breadcrumb breadcrumb">
                        <li>
                            <i class="fa fa-home"></i>
                            <a href="@Url.Action("Index", "Home")">Home </a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                         <a href="#">Applications</a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                            <a href="@Url.Action("ManualCompOffList", "WetosManualCO")">Extra Working Entry</a>
                        </li>
                        <li class="pull-right">
                            <div id="dashboard-report" title="Today's date">
                                <span style="cursor:pointer" class="back " title="Back" id="goback"><i class="fa fa-arrow-left"></i></span>
                                <i class="fa fa-calendar"></i>
                                <span>@DateTime.Now.ToLongDateString()</span>                           
                            </div>
                        </li>              
                    </ul>
                </div>
            </div>
 </section>
        <section class="content">
      
          <div class="box">
            
           
            <!-- /.box-header -->
            <div class="box-body">
               

@using (Html.BeginForm())
{
    <div style="color:Red">
    @Html.ValidationSummary(false)
    </div>
    <fieldset>
    <div id="ErrorStringMessage" style="color:Red;font-size:14px"></div><br />
        @Html.HiddenFor(model => model.IsAutoEntry)
        
       

         @if (@Model == null || @Model.MySelf == false)
         {

        <div class="row">
       <div class="editor-label col-md-2">
      Company Name <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field col-md-6">
        
  <div class="input-group date">
          <div class="input-group-addon">
                   <i class="fa fa-suitcase" aria-hidden="true"></i>
                  </div> 

        @Html.DropDownListFor(a => a.CompanyId, (IEnumerable<SelectListItem>)@ViewBag.CompanyNameList, "Select", new { @class = "form-control select2", id = "CompanyddlList" })
     
        </div>
        </div>
        </div> 
        <br />
         <div class="row">
       <div class="editor-label col-md-2">
     Branch Name <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field col-md-6">
        <div class="input-group date">
         <div class="input-group-addon">
         <i class="fa fa-university" aria-hidden="true"></i>
         </div> 
             @Html.DropDownListFor(a => a.BranchId, (IEnumerable<SelectListItem>)@ViewBag.BranchNameList, "Select", new { @class = "form-control select2", id = "BranchddlList" })
      
        </div>
        </div>
        </div>
        <br />
        <div class="row">
       <div class="editor-label col-md-2">
     Employee Name <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field col-md-6">
        <div class="input-group date">
         <div class="input-group-addon">
         <i class="fa fa-university" aria-hidden="true"></i>
         </div> 
             @Html.DropDownListFor(a => a.EmployeeId, (IEnumerable<SelectListItem>)@ViewBag.EmployeeList, "Select", new { @class = "form-control select2", id = "EmployeeddlList" })
      
        </div>
        </div>
        </div>
        <br />
         }
         else
         {
             // Updated by Rajas on 29 AUGUST 2017
              @Html.HiddenFor(model => model.EmployeeId, new { id = "EmployeeddlList" })
               @Html.HiddenFor(model => model.BranchId, new { id = "BranchddlList" })
                @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyddlList" })
         }
        <div class="row">
       
         <div class = "col-md-2">
          Extra Working Date
        </div>
         <div class="col-md-2">
           <div class="form-group">
        @*<label>@Model.FromDate</label>*@
        <div class="input-group date">
          <div class="input-group-addon">
         <i class="fa fa-calendar"></i>
         </div>
       <input type="text" class="form-control datepicker" data-date-fomat="dd-MMM-yyyy" style= "padding-left:10px; " name="FromDate" id="FromDate"
        value="@String.Format("{0:dd-MMM-yyyy}", @Model.FromDate)" />
            @*  @{var TranDate = Model.TranDate == null ? "" : Model.TranDate.ToString("dd-MMM-yyyy");}
             <label>@TranDate</label>*@
             </div>
            </div>
        </div>
       
      </div>
     
      <div class = "row">
      <div class="col-md-2" style="padding-right:0px !important">
            Is In time in next day? <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="col-md-1">
        <input type="checkbox" id="IsInPunchInNextDay" value = "@Model.IsInPunchInNextDay" name= "IsInPunchInNextDay"/>
        </div>
        
        </div>
     <div class="row">
      <div class = "col-md-2">
            Login Time <span style="color:Red;font-size:18px" >*</span> <br /><span  style="color:Blue;font-size:10px">(In 24 hours format)</span>
        </div>
         <div class="col-md-2">
     <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-clock-o"></i>
                </div>
      <input type="text" name="LoginTime" class="form-control" id="LoginTime" data-inputmask="'mask': ['', '99:99']" data-mask/>
    </div></div>
       </div>
     </div>

        <div class = "row">
        <div class="col-md-2" style="padding-right:0px !important">
            Is Out time in next day? <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="col-md-1">
        <input type="checkbox" id="IsOutPunchInNextDay" value = "@Model.IsOutPunchInNextDay" name= "IsOutPunchInNextDay"/>
        </div>
        </div>
        <div class="row">
         <div class = "col-md-2">
            Logout Time <span style="color:Red;font-size:18px" >*</span><br /> <span  style="color:Blue;font-size:10px">(In 24 hours format)</span>
        </div>
         <div class="col-md-2">
        <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-clock-o"></i>
                </div>
      <input type="text" name="LogoutTime" class="form-control" id="LogoutTime" data-inputmask="'mask': ['', '99:99']" data-mask/>
    </div>
    </div>
       </div>
        </div>
         <div class = "row">
         <div class = "col-md-2">
            Extra Working Time <span style="color:Red;font-size:18px" >*</span>
        </div>
         <div class="col-md-2">
           <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-clock-o"></i>
                </div>
      @* <label>@Model.ExtraWorkingHrs</label>*@
     @* <input type="text" name="ExtraWorkingHrs" class="form-control" id="ExtraWorkingHrs" data-inputmask="'mask': ['', '99:99']" data-mask/>*@
      <input type="text" name="ExtraWorkingHrs" id="ExtraWorkingHrs" class="form-control" readonly="readonly" data-inputmask="'mask': ['', '99:99:99']" data-mask/>
     @* @Html.TextBoxFor(model => model.ExtraWorkingHrs)*@
       </div>
       </div>
       </div>

        
        </div>
      
      <div class="row">
      <div class = "col-md-2">
            Extra Working Calculation <span style="color:Red;font-size:18px" >*</span>
        </div>
         <div class = "col-md-2">
           <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-calculator"></i>
                </div>
        <div class="editor-field">
                  @Html.TextBoxFor(model => model.CompOffBalance, new { @class = "form-control", @readonly = "readonly" })
           </div>
           </div>
           </div>
        </div>
      </div>
        

        <div class="row">
       <div class="editor-label col-md-2">
     Work Purpose <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field col-md-6">
        <div class="input-group date">
         <div class="input-group-addon">
         <i class="fa fa-university" aria-hidden="true"></i>
         </div> 
             @Html.DropDownListFor(a => a.Purpose, (IEnumerable<SelectListItem>)@ViewBag.ODPurposeList, "Select", new { @class = "form-control select2", id = "ODPurposeList", @style = "width:200px" })
      
        </div>
        </div>
        </div>

        <br />

      <div class = "row">
         <div class = "col-md-2">
            Purpose Description <span style="color:Red;font-size:18px" >*</span>
        </div>
         <div class = "col-md-5">
           <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-pencil "></i>
                </div>
        <div class="editor-field">
                  @Html.TextAreaFor(model => model.CompOffPurpose, new { @style = "height:50px;width:200px", @class = "form-control" })
           </div>
           </div>
           </div>
        </div>
       </div>

       

      @* Commented By Anagha on 11 June 2018
        As Not Needed For Tekman*@
    @*   <div class = "row">
         <div class = "col-md-2">
            Effective Date
        </div>
         <div class="col-md-2">
           <div class="form-group">
                <div class="input-group date">
                <div class="input-group-addon">
                <i class="fa fa-clock-o"></i>
                </div>
    <input type="text" name="EffectiveDate" id="EffectiveDate" class="form-control datepicker"/>
     </div>
       </div>
       </div>
</div>*@

          <div class = "row">
         <div class = "col-md-2">
        <p>
            <input type="submit" id="savebtn" value="Save" class="btn btn-primary" />
        </p>
        </div>
        </div>
    </fieldset>
}

@*Commented by Pushkar on 4 FEB 2017 as was unwanted*@
@*<div>
    @Html.ActionLink("Back to List", "ExceptionEntryIndex")    
</div>*@


            <!-- /.box-body -->
          </div>
          <!-- /.box -->
           </div>
          <!-- /.box -->
      
      <!-- /.row -->
    </section>
    </div>
</div>
<div id="ErrorDiv" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id="ErrorBody">
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="col-md-2  btn btn-primary" id="SubmitBtn"
                    style="display: none">
                    Submit</button>
                <button type="button" data-dismiss="modal" class="col-md-2 btn">
                    Cancel</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    //    $(document).ready(function () {

    //        // alert("ready");
    //        var active = $("#active").val();
    //        //alert(active);
    //        if (active == "False") {
    //            $("input").attr("disabled", "disabled");
    //            $("#Reason").attr("disabled", "disabled");

    //            $("#ShiftId").attr("disabled", "disabled");
    //            $("#savebtn").attr("disabled", "disabled");
    //        }
    //    });

    //alert("1");
    $('.back').click(function () {
        //alert("2");
        parent.history.back();
        return false;
    });

    $(function () {
        //Initialize Select2 Elements
        $(".select2").select2();

        //Datemask dd/mm/yyyy


        //Date picker
        $('.datepicker').datepicker({
            format: "dd-M-yyyy",
            autoclose: true
        });


    });


</script>
<script type="text/javascript">

    $("[data-mask]").inputmask("hh:mm");

    
    
    
</script>
<script type="text/javascript">
    // Added by Rajas on 27 DEC 2016 to fill drop down list on selection of other drop down
    $("#CompanyddlList").change(function () {
        var companyid = $("#CompanyddlList").val();
        $.ajax({
            url: '@Url.Content("~/WetosEmployee/GetBranch")',
            type: "POST",
            dataType: "json",
            data: { Companyid: companyid },
            success: function (data) {
                //alert("success");
                $("#BranchddlList").empty();
                //alert("success empty data");
                $("#BranchddlList").append("<option value=" + "0" + ">" + "Select" + "</option>"); // Added by Rajas on 27 FEB 2017
                for (var i = 0; i < data.length; i++) {

                    //alert("in func");
                    // states.option.selected = true;
                    $("#BranchddlList").append("<option value=" + "" + data[i].BranchId + "" + ">" + data[i].BranchName + "</option>");

                }

            },
            error: function (data) {
                //alert("hello");
            }
        });
    });

    $("#BranchddlList").change(function () {
        // alert($("#Group_code").val());
        isDirty = false;
        var branchid = $("#BranchddlList").val();
       
        $.ajax({
            url: '@Url.Content("~/WetosManualCO/GetEmployee")',
            type: "POST",
            dataType: "json",
            data: { Branchid: branchid },
            success: function (data) {
                //alert("success");
                $("#EmployeeddlList").empty();
                //alert("success empty data");
                $("#EmployeeddlList").append("<option value=" + "0" + ">" + "Select" + "</option>"); // Added by Rajas on 27 FEB 2017
                for (var i = 0; i < data.length; i++) {

                    //alert("in func");
                    // states.option.selected = true;
                    $("#EmployeeddlList").append("<option value=" + "" + data[i].EmployeeId + "" + ">" + data[i].EmployeeName + "</option>");

                }

            },
            error: function (data) {
                //alert("hello");
            }
        });
    });

    $("#ExtraWorkingHrs").keyup(function () {
        var ExtraWorkingHrs = $("#ExtraWorkingHrs").val();
        if (ExtraWorkingHrs.indexOf('_') == -1) {
            $("#ExtraWorkingHrs").css("border", "1px solid #e5e5e5");

            $("#savebtn").attr("disabled", false);
        }
        else {
            $("#ExtraWorkingHrs").focus();
            $("#ExtraWorkingHrs").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }
    });

    //    $("#ExtraWorkingHrs").blur(function () {
    //        //alert();
    //        var BranchId = $("#BranchddlList").val();
    //        var CompanyId = $("#CompanyddlList").val();
    //        var EmployeeId = $("#EmployeeddlList").val();
    //        var ExtraWorkingHrs = $("#ExtraWorkingHrs").val();
    //        $.ajax({
    //            url: '@Url.Content("~/WetosManualCO/CalculateManualCompOffBalance")',
    //            type: "POST",
    //            dataType: "json",
    //            data: { CompanyId: CompanyId, BranchId: BranchId, EmployeeId: EmployeeId, ExtraWorkingHours: ExtraWorkingHrs },
    //            success: function (data) {
    //                $("#CompOffBalance").val(data);
    //            },
    //            error: function (data) {
    //                $("#CompOffBalance").val("0");
    //            }
    //        });
    //    });

    $("#LogoutTime").keydown(function () {
        var LoginTime = $("#LoginTime").val();
        //alert(LoginTime);
        if (LoginTime == null || LoginTime == "" || LoginTime.indexOf('_') > -1) {
            $("#LoginTime").focus();
            $("#LoginTime").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }

        var LogoutTime = $("#LogoutTime").val();
        if (LogoutTime.indexOf('_') == -1) {
            $("#LogoutTime").css("border", "1px solid #e5e5e5");

            $("#savebtn").attr("disabled", false);

        }
        else {
            $("#LogoutTime").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }
    });

    $("#LoginTime").keydown(function () {
        var LoginTime = $("#LoginTime").val();

        //alert(LoginTime);
        if (LoginTime.indexOf('_') == -1) {
            $("#LoginTime").css("border", "1px solid #e5e5e5");

            $("#savebtn").attr("disabled", false);
        }
        else {
            $("#LoginTime").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }
    });


    $("#LoginTime").blur(function () {
        var LoginTime = $("#LoginTime").val();

        //alert(LoginTime);

        if (LoginTime.indexOf('_') == -1) {
            $("#LoginTime").css("border", "1px solid #e5e5e5");

            $("#savebtn").attr("disabled", false);
        }
        else {
            $("#LoginTime").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }
    });

    //    $("#LogoutTime").blur(function () {

    //    });




    $("#FromDate").change(function () {
        var login = $("#LoginTime").val();
        var logout = $("#LogoutTime").val();
        var date = $("#FromDate").val();
        var empid = $("#EmployeeddlList").val();
        
        //alert(login);
        //alert(logout);
        //alert(empid);

        //Ajax ---> Start
        $.ajax({
            url: '@Url.Content("~/WetosManualCO/GetExtraHours")',
            type: "POST",
            dataType: "json",
            data: { Login: login, Logout: logout, TranDate: date, EmpId: empid }, // 
            success: function (data) {
                //alert(data);
                //var myDate = new Date(data[0].start.match(/\d+/)[0] * 1);
                //alert(myDate);
                $("#ExtraWorkingHrs").val(data);
                //alert(data);

                //var fff = $("#ExtraWorkingHrs").val();
                //alert(fff);


            },
            error: function (data) {
                //alert("hello");
            }
        });

        //Added by shalaka on 30th Nov 2017 for Calculate Compoff --> Start
        if (login != null && logout != null && Date != null) {
            var login = $("#LoginTime").val();
            var logout = $("#LogoutTime").val();
            var date = $("#FromDate").val();
            var empid = $("#EmployeeddlList").val();
            //Ajax ---> Start
            $.ajax({
                url: '@Url.Content("~/WetosManualCO/GetExtraHours")',
                type: "POST",
                dataType: "json",
                data: { Login: login, Logout: logout, TranDate: date, EmpId: empid }, // 
                success: function (data) {
                    //alert(data);
                    $("#ExtraWorkingHrs").val(data);

                    var BranchId = $("#BranchddlList").val();
                    var CompanyId = $("#CompanyddlList").val();
                    var EmployeeId = $("#EmployeeddlList").val();
                    var ExtraWorkingHrs = $("#ExtraWorkingHrs").val();
                    $.ajax({
                        url: '@Url.Content("~/WetosManualCO/CalculateManualCompOffBalance")',
                        type: "POST",
                        dataType: "json",
                        data: { CompanyId: CompanyId, BranchId: BranchId, EmployeeId: EmployeeId, ExtraWorkingHours: ExtraWorkingHrs },
                        success: function (Mydata) {
                            $("#CompOffBalance").val(Mydata);
                        },
                        error: function (Mydata) {
                            $("#CompOffBalance").val("0");
                        }
                    });
                    //Ajax ---> End

                },
                error: function (data) {
                    //alert("hello");
                }
            }); //Ajax ---> End
            //Added by shalaka on 30th Nov 2017 for Calculate Compoff --> End
        }
    });
    // Added by Rajas on 29 SEP 2017 END

    $(document).ready(function () {
        $('#ErrorStringMessage').html("");
        var EmployeeId = $("#EmployeeddlList").val();

        if (EmployeeId > 0) {
            CheckManualCompOffIsAllowedOrNot();
        }
        else {
            $("#EmployeeddlList").change(function () {
                CheckManualCompOffIsAllowedOrNot();
            });
        }
    });


    function CheckManualCompOffIsAllowedOrNot() {
        var BranchId = $("#BranchddlList").val();
        var CompanyId = $("#CompanyddlList").val();
        var EmployeeId = $("#EmployeeddlList").val();
        $.ajax({
            url: '@Url.Content("~/WetosManualCO/CheckManualCompOffIsAllowedOrNot")',
            dataType: "json",
            data: { EmployeeId: EmployeeId, BranchId: BranchId, CompanyId: CompanyId },
            success: function (data) {

                if (data.RetStat == true) {
                    $("#savebtn").attr("disabled", false);
                }
                else {

                    $("#savebtn").attr("disabled", true);
                    $('#ErrorDiv').modal({ backdrop: data.ErrorMessage, keyboard: false })
                    {
                        hideloading();
                        $('#ErrorBody').html(data.ErrorMessage);
                        $("#savebtn").attr("disabled", true);
                    }
                    // $('#ErrorStringMessage').html(data.ErrorMessage);

                }
            },
            error: function (data) {
                alert("Error");
                hideloading();
            }
        });
    }
</script>
<script type="text/javascript">
    //CODE ADDED BY SHRADDHA ON 15 JAN 2018 FOR IsOutPunchInNextDay START
    $("#IsOutPunchInNextDay").on('change', function () {
        //alert("In fucntion");
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
        } else {
            $(this).attr('value', 'false');
        }

    });
    //CODE ADDED BY SHRADDHA ON 15 JAN 2018 FOR IsOutPunchInNextDay END

    //CODE ADDED BY SHRADDHA ON 15 JAN 2018 FOR IsInPunchInNextDay START
    $("#IsInPunchInNextDay").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            $("#IsOutPunchInNextDay").prop('value', 'true');
            $("#IsOutPunchInNextDay").attr('disabled', true);
            $("#IsOutPunchInNextDay").prop("checked", "checked");
        } else {
            $(this).attr('value', 'false');
            $("#IsOutPunchInNextDay").attr('disabled', false);

        }

    });
    //CODE ADDED BY SHRADDHA ON 15 JAN 2018 FOR IsInPunchInNextDay END
</script>
<script type="text/javascript">
    $(document).ready(function () {
        //alert("In fucntion");
        if ($("#IsInPunchInNextDay").is(':checked')) {
            $("#IsInPunchInNextDay").attr('value', 'true');
        }
        else {
            $("#IsInPunchInNextDay").attr('value', 'false');
        }


        if ($("#IsOutPunchInNextDay").is(':checked')) {
            $("#IsOutPunchInNextDay").attr('value', 'true');
        } else {
            $("#IsOutPunchInNextDay").attr('value', 'false');
        }
    });
</script>
<script type="text/javascript">
    // Added by Rajas on 29 SEP 2017 START
    // Calculate extra hours
    $("#LogoutTime").blur(function () {
        isDirty = false;
        var LoginTime = $("#LoginTime").val();
        var LogoutTime = $("#LogoutTime").val();
        if (LogoutTime.indexOf('_') == -1) {
            $("#LogoutTime").css("border", "1px solid #e5e5e5");

            $("#savebtn").attr("disabled", false);
        }
        else {
            $("#LogoutTime").css("border", "1px solid Red");

            $("#savebtn").attr("disabled", true);
        }
        //CODE ADDED BY SHRADDHA ON 29 JAN 2018 START
        var date = $("#FromDate").val();
        var IsInPunchInNextDay = $("#IsInPunchInNextDay").val();
        var IsOutPunchInNextDay = $("#IsOutPunchInNextDay").val();
        //CODE ADDED BY SHRADDHA ON 29 JAN 2018 END
        $.ajax({
            url: '@Url.Content("~/WetosManualCO/CheckLoginTimeValidationManualCompOff")',
            type: "POST",
            dataType: "json",
            data: { LoginTime: LoginTime, LogoutTime: LogoutTime, TranDate: date, IsInPunchInNextDay: IsInPunchInNextDay, IsOutPunchInNextDay: IsOutPunchInNextDay }, // ADDED IsInPunchInNextDay AND IsOutPunchInNextDay FLAGS BY SHRADDHA ON 29 JAN 2018
            success: function (data) {
                if (data == 0) {
                    //$("#LogoutTime").focus();
                    $("#LogoutTime").css("border", "1px solid Red");

                    $("#savebtn").attr("disabled", true);
                }
            },
            error: function (data) {
                // $("#LogoutTime").focus();
                $("#LogoutTime").css("border", "1px solid Red");

                $("#savebtn").attr("disabled", true);
            }
        });
        var login = $("#LoginTime").val();
        var logout = $("#LogoutTime").val();

        var empid = $("#EmployeeddlList").val();


        $.ajax({
            url: '@Url.Content("~/WetosManualCO/GetExtraHours")',
            type: "POST",
            dataType: "json",
            data: { Login: login, Logout: logout, TranDate: date, EmpId: empid, IsInPunchInNextDay: IsInPunchInNextDay, IsOutPunchInNextDay: IsOutPunchInNextDay }, // ADDED IsInPunchInNextDay AND IsOutPunchInNextDay FLAGS BY SHRADDHA ON 29 JAN 2018
            success: function (data) {
                //alert(data);
                $("#ExtraWorkingHrs").val(data);

                var BranchId = $("#BranchddlList").val();
                var CompanyId = $("#CompanyddlList").val();
                var EmployeeId = $("#EmployeeddlList").val();
                var ExtraWorkingHrs = $("#ExtraWorkingHrs").val();
                //alert(ExtraWorkingHrs);
                $.ajax({
                    url: '@Url.Content("~/WetosManualCO/CalculateManualCompOffBalance")',
                    type: "POST",
                    dataType: "json",
                    data: { CompanyId: CompanyId, BranchId: BranchId, EmployeeId: EmployeeId, ExtraWorkingHours: ExtraWorkingHrs },
                    success: function (Mydata) {
                        $("#CompOffBalance").val(Mydata);
                        //alert(ExtraWorkingHrs);
                    },
                    error: function (Mydata) {
                        $("#CompOffBalance").val("0");
                    }
                });
            },
            error: function (data) {
                //alert("hello");
            }
        });


    });

</script>
