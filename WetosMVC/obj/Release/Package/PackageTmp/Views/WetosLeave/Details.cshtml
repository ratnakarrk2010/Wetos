@model WetosMVCMainApp.Models.LeaveMasterModel
@{
    ViewBag.Title = "Details";
}
@System.Web.Optimization.Styles.Render("~/Content/Select2")
@System.Web.Optimization.Scripts.Render("~/bundles/Select2")
<div class="page-content-wrapper" id="page_content">
    <div class="page-content">
        <section class="content-header">
      <h1>Leave Master
<small>Details</small>
</h1>
<div class="row">
                <div class="col-md-12">
                    <ul class="page-breadcrumb breadcrumb">
                        <li>
                            <i class="fa fa-home"></i>
                            <a href="@Url.Action("Index", "Home")">Home </a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                         <a href="#">Masters</a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                            <a href="@Url.Action("Index", "WetosLeave")">Leave</a>
                        </li>
                        <li class="pull-right">
                            <div id="dashboard-report"  data-toggle="tooltip" title="Today's date">
                                <span style="cursor: pointer" class="back "  data-toggle="tooltip" title="Back" id="goback"><i class="fa fa-arrow-left"></i>@*<a href="#" >Back</a>*@

                                </span>
                                <i class="fa fa-calendar"></i>
                                <span>@DateTime.Now.ToLongDateString()
                                </span>
                            </div>
                            @* <span style="float:left">@Html.ActionLink("Add New Location", "Create")</span>*@
                        </li>
                    </ul>
                </div>
            </div>
      <div style="clear: both;"></div>

       @*Added by Pushkar For back breadcrumb on 24 OCT 2016-----------End*@
</section>
        <section class="content">
      <div class="row">
        <div class="col-xs-12">
          <div class="box">
           
            <div class="box-body">
  <div class="row">
      <div class="col-md-2">Code <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.LeaveCode)
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.LeaveCode)
    </div>
      </div> 

      <div class="row">
      <div class="col-md-2">Name <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.LeaveName)
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.LeaveName)
    </div>

      </div> 

      <div class="row">
      <div class="col-md-2">Description</div>
      @Html.DisplayFor(model => model.LeaveDescription)
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.LeaveCode)
    </div>
      </div> 

      <div class="row">
      <div class="col-md-2">Leave type</div>
    
      @Html.RadioButtonFor(model => model.LeaveType, false, new { disabled = "disabled" }) Paid
     
      @Html.RadioButtonFor(model => model.LeaveType, true, new { disabled = "disabled" }) Non paid
      </div> 
    
    @* Updated by Rajas on 10 MARCH 2017*@
    <div class="row">
      <div class="col-md-2">Applicable to</div>
    @Html.RadioButtonFor(model => model.ApplicableToMaleFemale, "B", new { disabled = "disabled" }) Both
      @Html.RadioButtonFor(model => model.LeaveType, "M", new { disabled = "disabled" }) Male only
       @Html.RadioButtonFor(model => model.LeaveType, "F", new { disabled = "disabled" }) Female only
      </div> 
      
        <div class="row"> 
                <div class="col-md-2">
                <div class="form-group">
               Leave credit type
                 @Html.DropDownListFor(a => a.LeaveCreditTypeId, (IEnumerable<SelectListItem>)ViewBag.LeaveCreditTypeList, "Select", new { @class = "form-control select2", disabled = "disabled" })
              </div>
              </div>
              </div>

      <div class="row">
      <div class="col-md-4">Maximum leaves allocated for year<span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.NoOfDaysAllowedInYear, new { @class = "quantity" })
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.NoOfDaysAllowedInYear)
    </div>
      </div> 
      <div class="row">
      <div class="col-md-4">Maximum times can be used in a year <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.MaxNoOfTimesAllowedInYear, new { @class = "quantity" })
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.MaxNoOfTimesAllowedInYear)
    </div>

      </div> 
      <div class="row">
      <div class="col-md-4">Maximum leaves allowed at a time <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.MaxNoOfLeavesAllowedAtaTime, new { @class = "quantity" })
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.MaxNoOfLeavesAllowedAtaTime)
    </div>
      </div> 
      <div class="row">
      <div class="col-md-4">Maximum leaves allowed in month <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.MaxNoOfLeavesAllowedInMonth, new { @class = "quantity" })
       <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.MaxNoOfLeavesAllowedInMonth)
    </div>
      </div> 
      <div class="row">
      <div class="col-md-4">Minimum leaves allowed at a time <span style="color:Red;font-size:18px" >*</span>
      </div>
      @Html.DisplayFor(model => model.MinNoofLeaveAllowedatatime, new { @class = "quantity" })
      <div style="color: Red; font-size: 12px">
    @Html.ValidationMessageFor(model => model.MinNoofLeaveAllowedatatime)
    </div>

      </div> 
  
    <div class="row">
    <div class="col-md-3">
        Accumulation allowed or not
    </div>
    <div class="col-md-2">
        @Html.RadioButtonFor(model => model.AccumulationAllowedOrNot, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.AccumulationAllowedOrNot, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.AccumulationAllowedOrNot)
    </div>

    <div class="col-md-3">
        Maximum accumulation days
    </div>
    <div class="col-md-2">
        @Html.DisplayFor(model => model.MaxAccumulationDays, new { @class = "quantity" })
        @Html.ValidationMessageFor(model => model.MaxAccumulationDays)
    </div>
    </div>
     

     <div class="row">
    <div class="col-md-3">
        Extra document attachment required ? (eg. Medical Certificate )
    </div>
    <div class="col-md-2">
        @Html.RadioButtonFor(model => model.IsAttachmentNeeded, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.IsAttachmentNeeded, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.IsAttachmentNeeded)
    </div>

    <div class="col-md-3">
        Document attachment required for minimum leave days
    </div>
    <div class="col-md-2">
        @Html.DisplayFor(model => model.AttachmentRequiredForMinNoOfLeave, new { @class = "quantity" })
        @Html.ValidationMessageFor(model => model.AttachmentRequiredForMinNoOfLeave)
    </div>
    </div>
    
    <div class="row">
    <div class="col-md-3">
        Encashment allowed or not
    </div>
    <div class="col-md-2">
      @Html.RadioButtonFor(model => model.EncashmentAllowedOrNot, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.EncashmentAllowedOrNot, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.EncashmentAllowedOrNot)
    </div>

    <div class="col-md-3">
       Encashable days
    </div>
    <div class="col-md-2">
        @Html.DisplayFor(model => model.NoOfDaysEncashed, new { @class = "quantity" })
        @Html.ValidationMessageFor(model => model.NoOfDaysEncashed)
    </div>
    </div>
     
    
    <div class="row">
    <div class="col-md-3">
        Negative balance allowed
    </div>
    <div class="col-md-2">
      @Html.RadioButtonFor(model => model.NegativeBalanceAllowed, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.NegativeBalanceAllowed, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.NegativeBalanceAllowed)
    </div>

    <div class="col-md-3">
        Carry forword allowed
    </div>
    <div class="col-md-2">
      @Html.RadioButtonFor(model => model.IsCarryForword, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.IsCarryForword, false, new { disabled = "disabled" }) No
       @Html.ValidationMessageFor(model => model.IsCarryForword)
    </div>
    </div>
     
    
    <div class="row">
    <div class="col-md-3">
        Week off between leave consider leave
    </div>
    <div class="col-md-2">
        @Html.RadioButtonFor(model => model.WOBetLevConsiderLeave, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.WOBetLevConsiderLeave, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.WOBetLevConsiderLeave)
    </div>
     <div class="col-md-3">
        Holiday between leave consider leave
    </div>
    <div class="col-md-2">
       @Html.RadioButtonFor(model => model.HHBetLevConsiderLeave, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.HHBetLevConsiderLeave, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.HHBetLevConsiderLeave)
    </div>

    </div>
     
    
    <div class="row">
    <div class="col-md-3">
        Half day allowed
    </div>
    <div class="col-md-2">
       @Html.RadioButtonFor(model => model.ISHalfAllowed, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.ISHalfAllowed, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.ISHalfAllowed)
    </div>

     <div class="col-md-3">
        Leave combination allowed
    </div>
    <div class="col-md-2">
        @Html.RadioButtonFor(model => model.IsLeaveCombination, true, new { disabled = "disabled" }) Yes
      @Html.RadioButtonFor(model => model.IsLeaveCombination, false, new { disabled = "disabled" }) No
        @Html.ValidationMessageFor(model => model.IsLeaveCombination)
    </div>

    </div>
     

<p>
  <span style="cursor:pointer; float:left" title = "Click to edit Leave" class="btn btn-default tooltip" >@Html.ActionLink("Edit", "Edit", new { id = Model.LeaveId })</span>
             <span  class="btn btn-default" style="cursor:pointer; float:left; margin-left:10px" title = "Click to go back to leave details list">@Html.ActionLink("Back to Leave details list", "Index")</span>
</p>
</div>
</div>
</div>
</div>
</section>
    </div>
</div>
<script type="text/jscript">
    $(document).ready(function () {
        $(function () {
            //Initialize Select2 Elements
            $(".select2").select2();
        });



        $('.back').click(function () {
            parent.history.back();
            return false;
        });
    });

    function goBack() {
        window.history.back();
    }

</script>
