//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WetosMVC.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MonthSalaryDataDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MonthSalaryDataDataSet : global::System.Data.DataSet {
        
        private MonthlySalaryDetailDataTable tableMonthlySalaryDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MonthSalaryDataDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MonthSalaryDataDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MonthlySalaryDetail"] != null)) {
                    base.Tables.Add(new MonthlySalaryDetailDataTable(ds.Tables["MonthlySalaryDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonthlySalaryDetailDataTable MonthlySalaryDetail {
            get {
                return this.tableMonthlySalaryDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MonthSalaryDataDataSet cln = ((MonthSalaryDataDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MonthlySalaryDetail"] != null)) {
                    base.Tables.Add(new MonthlySalaryDetailDataTable(ds.Tables["MonthlySalaryDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMonthlySalaryDetail = ((MonthlySalaryDetailDataTable)(base.Tables["MonthlySalaryDetail"]));
            if ((initTable == true)) {
                if ((this.tableMonthlySalaryDetail != null)) {
                    this.tableMonthlySalaryDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MonthSalaryDataDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MonthSalaryDataDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMonthlySalaryDetail = new MonthlySalaryDetailDataTable();
            base.Tables.Add(this.tableMonthlySalaryDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMonthlySalaryDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MonthSalaryDataDataSet ds = new MonthSalaryDataDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MonthlySalaryDetailRowChangeEventHandler(object sender, MonthlySalaryDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonthlySalaryDetailDataTable : global::System.Data.TypedTableBase<MonthlySalaryDetailRow> {
            
            private global::System.Data.DataColumn columnMonthlySalaryDetailId;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnEmpno;
            
            private global::System.Data.DataColumn columnSalaryMonth;
            
            private global::System.Data.DataColumn columnSalaryYear;
            
            private global::System.Data.DataColumn columnNoOfWorkingDays;
            
            private global::System.Data.DataColumn columnPresentDays;
            
            private global::System.Data.DataColumn columnAbsentDays;
            
            private global::System.Data.DataColumn columnLeaveDays;
            
            private global::System.Data.DataColumn columnBasic;
            
            private global::System.Data.DataColumn columnGrossSalary;
            
            private global::System.Data.DataColumn columnHra;
            
            private global::System.Data.DataColumn columnLTA;
            
            private global::System.Data.DataColumn columnFoodAllowance;
            
            private global::System.Data.DataColumn columnDriverAllowance;
            
            private global::System.Data.DataColumn columnSpecialAllowance;
            
            private global::System.Data.DataColumn columnPT;
            
            private global::System.Data.DataColumn columnTDS;
            
            private global::System.Data.DataColumn columnPF;
            
            private global::System.Data.DataColumn columnMLWF;
            
            private global::System.Data.DataColumn columnOtherDeduction;
            
            private global::System.Data.DataColumn columnEmployeePF;
            
            private global::System.Data.DataColumn columnOtherDeduction1;
            
            private global::System.Data.DataColumn columnOtherDeduction2;
            
            private global::System.Data.DataColumn columnTotalDeduction;
            
            private global::System.Data.DataColumn columnAdvSalary;
            
            private global::System.Data.DataColumn columnCompLoanEMI;
            
            private global::System.Data.DataColumn columnOverTime;
            
            private global::System.Data.DataColumn columnArrears;
            
            private global::System.Data.DataColumn columnIncAdjustment;
            
            private global::System.Data.DataColumn columnOtherIncome1;
            
            private global::System.Data.DataColumn columnOtherIncome2;
            
            private global::System.Data.DataColumn columnNetSalary;
            
            private global::System.Data.DataColumn columnMonthlyIncentive;
            
            private global::System.Data.DataColumn columnOtherAddition;
            
            private global::System.Data.DataColumn columnIsApproved;
            
            private global::System.Data.DataColumn columnApprovedBy;
            
            private global::System.Data.DataColumn columnApprovedTime;
            
            private global::System.Data.DataColumn columnFinancialYearId;
            
            private global::System.Data.DataColumn columnMonthlySalaryId;
            
            private global::System.Data.DataColumn columnExtraCreditRemark;
            
            private global::System.Data.DataColumn columnExtraDebitRemark;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnPreProcessDays;
            
            private global::System.Data.DataColumn columnPreProcessAmount;
            
            private global::System.Data.DataColumn columnPreProcessDebitAmount;
            
            private global::System.Data.DataColumn columnLWPArrearsAmount;
            
            private global::System.Data.DataColumn columnIsOnHold;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnEarlyCountPenalty;
            
            private global::System.Data.DataColumn columnLateCountPenalty;
            
            private global::System.Data.DataColumn columnLWPDays;
            
            private global::System.Data.DataColumn columnPayableDays;
            
            private global::System.Data.DataColumn columnEarlyCount;
            
            private global::System.Data.DataColumn columnLateCount;
            
            private global::System.Data.DataColumn columnMonthDays;
            
            private global::System.Data.DataColumn columnHoldArrearsAmount;
            
            private global::System.Data.DataColumn columnHoldDays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailDataTable() {
                this.TableName = "MonthlySalaryDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MonthlySalaryDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MonthlySalaryDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthlySalaryDetailIdColumn {
                get {
                    return this.columnMonthlySalaryDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpnoColumn {
                get {
                    return this.columnEmpno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryMonthColumn {
                get {
                    return this.columnSalaryMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryYearColumn {
                get {
                    return this.columnSalaryYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoOfWorkingDaysColumn {
                get {
                    return this.columnNoOfWorkingDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PresentDaysColumn {
                get {
                    return this.columnPresentDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbsentDaysColumn {
                get {
                    return this.columnAbsentDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeaveDaysColumn {
                get {
                    return this.columnLeaveDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasicColumn {
                get {
                    return this.columnBasic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossSalaryColumn {
                get {
                    return this.columnGrossSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HraColumn {
                get {
                    return this.columnHra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LTAColumn {
                get {
                    return this.columnLTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FoodAllowanceColumn {
                get {
                    return this.columnFoodAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DriverAllowanceColumn {
                get {
                    return this.columnDriverAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialAllowanceColumn {
                get {
                    return this.columnSpecialAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTColumn {
                get {
                    return this.columnPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TDSColumn {
                get {
                    return this.columnTDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PFColumn {
                get {
                    return this.columnPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MLWFColumn {
                get {
                    return this.columnMLWF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDeductionColumn {
                get {
                    return this.columnOtherDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeePFColumn {
                get {
                    return this.columnEmployeePF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDeduction1Column {
                get {
                    return this.columnOtherDeduction1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDeduction2Column {
                get {
                    return this.columnOtherDeduction2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDeductionColumn {
                get {
                    return this.columnTotalDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdvSalaryColumn {
                get {
                    return this.columnAdvSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompLoanEMIColumn {
                get {
                    return this.columnCompLoanEMI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverTimeColumn {
                get {
                    return this.columnOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrearsColumn {
                get {
                    return this.columnArrears;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncAdjustmentColumn {
                get {
                    return this.columnIncAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherIncome1Column {
                get {
                    return this.columnOtherIncome1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherIncome2Column {
                get {
                    return this.columnOtherIncome2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetSalaryColumn {
                get {
                    return this.columnNetSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthlyIncentiveColumn {
                get {
                    return this.columnMonthlyIncentive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherAdditionColumn {
                get {
                    return this.columnOtherAddition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsApprovedColumn {
                get {
                    return this.columnIsApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedByColumn {
                get {
                    return this.columnApprovedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedTimeColumn {
                get {
                    return this.columnApprovedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinancialYearIdColumn {
                get {
                    return this.columnFinancialYearId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthlySalaryIdColumn {
                get {
                    return this.columnMonthlySalaryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraCreditRemarkColumn {
                get {
                    return this.columnExtraCreditRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraDebitRemarkColumn {
                get {
                    return this.columnExtraDebitRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreProcessDaysColumn {
                get {
                    return this.columnPreProcessDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreProcessAmountColumn {
                get {
                    return this.columnPreProcessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreProcessDebitAmountColumn {
                get {
                    return this.columnPreProcessDebitAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LWPArrearsAmountColumn {
                get {
                    return this.columnLWPArrearsAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOnHoldColumn {
                get {
                    return this.columnIsOnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EarlyCountPenaltyColumn {
                get {
                    return this.columnEarlyCountPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateCountPenaltyColumn {
                get {
                    return this.columnLateCountPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LWPDaysColumn {
                get {
                    return this.columnLWPDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayableDaysColumn {
                get {
                    return this.columnPayableDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EarlyCountColumn {
                get {
                    return this.columnEarlyCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LateCountColumn {
                get {
                    return this.columnLateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthDaysColumn {
                get {
                    return this.columnMonthDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldArrearsAmountColumn {
                get {
                    return this.columnHoldArrearsAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldDaysColumn {
                get {
                    return this.columnHoldDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRow this[int index] {
                get {
                    return ((MonthlySalaryDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MonthlySalaryDetailRowChangeEventHandler MonthlySalaryDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MonthlySalaryDetailRowChangeEventHandler MonthlySalaryDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MonthlySalaryDetailRowChangeEventHandler MonthlySalaryDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MonthlySalaryDetailRowChangeEventHandler MonthlySalaryDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMonthlySalaryDetailRow(MonthlySalaryDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRow AddMonthlySalaryDetailRow(
                        int EmployeeId, 
                        string Empno, 
                        int SalaryMonth, 
                        int SalaryYear, 
                        double NoOfWorkingDays, 
                        double PresentDays, 
                        double AbsentDays, 
                        double LeaveDays, 
                        double Basic, 
                        double GrossSalary, 
                        double Hra, 
                        double LTA, 
                        double FoodAllowance, 
                        double DriverAllowance, 
                        double SpecialAllowance, 
                        double PT, 
                        double TDS, 
                        double PF, 
                        double MLWF, 
                        double OtherDeduction, 
                        double EmployeePF, 
                        double OtherDeduction1, 
                        double OtherDeduction2, 
                        double TotalDeduction, 
                        double AdvSalary, 
                        double CompLoanEMI, 
                        double OverTime, 
                        double Arrears, 
                        double IncAdjustment, 
                        double OtherIncome1, 
                        double OtherIncome2, 
                        double NetSalary, 
                        double MonthlyIncentive, 
                        double OtherAddition, 
                        bool IsApproved, 
                        int ApprovedBy, 
                        System.DateTime ApprovedTime, 
                        int FinancialYearId, 
                        int MonthlySalaryId, 
                        string ExtraCreditRemark, 
                        string ExtraDebitRemark, 
                        string Remark, 
                        decimal PreProcessDays, 
                        decimal PreProcessAmount, 
                        decimal PreProcessDebitAmount, 
                        decimal LWPArrearsAmount, 
                        bool IsOnHold, 
                        int Status, 
                        decimal EarlyCountPenalty, 
                        decimal LateCountPenalty, 
                        decimal LWPDays, 
                        decimal PayableDays, 
                        decimal EarlyCount, 
                        decimal LateCount, 
                        decimal MonthDays, 
                        decimal HoldArrearsAmount, 
                        decimal HoldDays) {
                MonthlySalaryDetailRow rowMonthlySalaryDetailRow = ((MonthlySalaryDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeId,
                        Empno,
                        SalaryMonth,
                        SalaryYear,
                        NoOfWorkingDays,
                        PresentDays,
                        AbsentDays,
                        LeaveDays,
                        Basic,
                        GrossSalary,
                        Hra,
                        LTA,
                        FoodAllowance,
                        DriverAllowance,
                        SpecialAllowance,
                        PT,
                        TDS,
                        PF,
                        MLWF,
                        OtherDeduction,
                        EmployeePF,
                        OtherDeduction1,
                        OtherDeduction2,
                        TotalDeduction,
                        AdvSalary,
                        CompLoanEMI,
                        OverTime,
                        Arrears,
                        IncAdjustment,
                        OtherIncome1,
                        OtherIncome2,
                        NetSalary,
                        MonthlyIncentive,
                        OtherAddition,
                        IsApproved,
                        ApprovedBy,
                        ApprovedTime,
                        FinancialYearId,
                        MonthlySalaryId,
                        ExtraCreditRemark,
                        ExtraDebitRemark,
                        Remark,
                        PreProcessDays,
                        PreProcessAmount,
                        PreProcessDebitAmount,
                        LWPArrearsAmount,
                        IsOnHold,
                        Status,
                        EarlyCountPenalty,
                        LateCountPenalty,
                        LWPDays,
                        PayableDays,
                        EarlyCount,
                        LateCount,
                        MonthDays,
                        HoldArrearsAmount,
                        HoldDays};
                rowMonthlySalaryDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonthlySalaryDetailRow);
                return rowMonthlySalaryDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRow FindByMonthlySalaryDetailId(int MonthlySalaryDetailId) {
                return ((MonthlySalaryDetailRow)(this.Rows.Find(new object[] {
                            MonthlySalaryDetailId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MonthlySalaryDetailDataTable cln = ((MonthlySalaryDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonthlySalaryDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMonthlySalaryDetailId = base.Columns["MonthlySalaryDetailId"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnEmpno = base.Columns["Empno"];
                this.columnSalaryMonth = base.Columns["SalaryMonth"];
                this.columnSalaryYear = base.Columns["SalaryYear"];
                this.columnNoOfWorkingDays = base.Columns["NoOfWorkingDays"];
                this.columnPresentDays = base.Columns["PresentDays"];
                this.columnAbsentDays = base.Columns["AbsentDays"];
                this.columnLeaveDays = base.Columns["LeaveDays"];
                this.columnBasic = base.Columns["Basic"];
                this.columnGrossSalary = base.Columns["GrossSalary"];
                this.columnHra = base.Columns["Hra"];
                this.columnLTA = base.Columns["LTA"];
                this.columnFoodAllowance = base.Columns["FoodAllowance"];
                this.columnDriverAllowance = base.Columns["DriverAllowance"];
                this.columnSpecialAllowance = base.Columns["SpecialAllowance"];
                this.columnPT = base.Columns["PT"];
                this.columnTDS = base.Columns["TDS"];
                this.columnPF = base.Columns["PF"];
                this.columnMLWF = base.Columns["MLWF"];
                this.columnOtherDeduction = base.Columns["OtherDeduction"];
                this.columnEmployeePF = base.Columns["EmployeePF"];
                this.columnOtherDeduction1 = base.Columns["OtherDeduction1"];
                this.columnOtherDeduction2 = base.Columns["OtherDeduction2"];
                this.columnTotalDeduction = base.Columns["TotalDeduction"];
                this.columnAdvSalary = base.Columns["AdvSalary"];
                this.columnCompLoanEMI = base.Columns["CompLoanEMI"];
                this.columnOverTime = base.Columns["OverTime"];
                this.columnArrears = base.Columns["Arrears"];
                this.columnIncAdjustment = base.Columns["IncAdjustment"];
                this.columnOtherIncome1 = base.Columns["OtherIncome1"];
                this.columnOtherIncome2 = base.Columns["OtherIncome2"];
                this.columnNetSalary = base.Columns["NetSalary"];
                this.columnMonthlyIncentive = base.Columns["MonthlyIncentive"];
                this.columnOtherAddition = base.Columns["OtherAddition"];
                this.columnIsApproved = base.Columns["IsApproved"];
                this.columnApprovedBy = base.Columns["ApprovedBy"];
                this.columnApprovedTime = base.Columns["ApprovedTime"];
                this.columnFinancialYearId = base.Columns["FinancialYearId"];
                this.columnMonthlySalaryId = base.Columns["MonthlySalaryId"];
                this.columnExtraCreditRemark = base.Columns["ExtraCreditRemark"];
                this.columnExtraDebitRemark = base.Columns["ExtraDebitRemark"];
                this.columnRemark = base.Columns["Remark"];
                this.columnPreProcessDays = base.Columns["PreProcessDays"];
                this.columnPreProcessAmount = base.Columns["PreProcessAmount"];
                this.columnPreProcessDebitAmount = base.Columns["PreProcessDebitAmount"];
                this.columnLWPArrearsAmount = base.Columns["LWPArrearsAmount"];
                this.columnIsOnHold = base.Columns["IsOnHold"];
                this.columnStatus = base.Columns["Status"];
                this.columnEarlyCountPenalty = base.Columns["EarlyCountPenalty"];
                this.columnLateCountPenalty = base.Columns["LateCountPenalty"];
                this.columnLWPDays = base.Columns["LWPDays"];
                this.columnPayableDays = base.Columns["PayableDays"];
                this.columnEarlyCount = base.Columns["EarlyCount"];
                this.columnLateCount = base.Columns["LateCount"];
                this.columnMonthDays = base.Columns["MonthDays"];
                this.columnHoldArrearsAmount = base.Columns["HoldArrearsAmount"];
                this.columnHoldDays = base.Columns["HoldDays"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMonthlySalaryDetailId = new global::System.Data.DataColumn("MonthlySalaryDetailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlySalaryDetailId);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnEmpno = new global::System.Data.DataColumn("Empno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpno);
                this.columnSalaryMonth = new global::System.Data.DataColumn("SalaryMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryMonth);
                this.columnSalaryYear = new global::System.Data.DataColumn("SalaryYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryYear);
                this.columnNoOfWorkingDays = new global::System.Data.DataColumn("NoOfWorkingDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfWorkingDays);
                this.columnPresentDays = new global::System.Data.DataColumn("PresentDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentDays);
                this.columnAbsentDays = new global::System.Data.DataColumn("AbsentDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentDays);
                this.columnLeaveDays = new global::System.Data.DataColumn("LeaveDays", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaveDays);
                this.columnBasic = new global::System.Data.DataColumn("Basic", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasic);
                this.columnGrossSalary = new global::System.Data.DataColumn("GrossSalary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossSalary);
                this.columnHra = new global::System.Data.DataColumn("Hra", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHra);
                this.columnLTA = new global::System.Data.DataColumn("LTA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTA);
                this.columnFoodAllowance = new global::System.Data.DataColumn("FoodAllowance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFoodAllowance);
                this.columnDriverAllowance = new global::System.Data.DataColumn("DriverAllowance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverAllowance);
                this.columnSpecialAllowance = new global::System.Data.DataColumn("SpecialAllowance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialAllowance);
                this.columnPT = new global::System.Data.DataColumn("PT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT);
                this.columnTDS = new global::System.Data.DataColumn("TDS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDS);
                this.columnPF = new global::System.Data.DataColumn("PF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPF);
                this.columnMLWF = new global::System.Data.DataColumn("MLWF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLWF);
                this.columnOtherDeduction = new global::System.Data.DataColumn("OtherDeduction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeduction);
                this.columnEmployeePF = new global::System.Data.DataColumn("EmployeePF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeePF);
                this.columnOtherDeduction1 = new global::System.Data.DataColumn("OtherDeduction1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeduction1);
                this.columnOtherDeduction2 = new global::System.Data.DataColumn("OtherDeduction2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeduction2);
                this.columnTotalDeduction = new global::System.Data.DataColumn("TotalDeduction", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeduction);
                this.columnAdvSalary = new global::System.Data.DataColumn("AdvSalary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvSalary);
                this.columnCompLoanEMI = new global::System.Data.DataColumn("CompLoanEMI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompLoanEMI);
                this.columnOverTime = new global::System.Data.DataColumn("OverTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTime);
                this.columnArrears = new global::System.Data.DataColumn("Arrears", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrears);
                this.columnIncAdjustment = new global::System.Data.DataColumn("IncAdjustment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncAdjustment);
                this.columnOtherIncome1 = new global::System.Data.DataColumn("OtherIncome1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome1);
                this.columnOtherIncome2 = new global::System.Data.DataColumn("OtherIncome2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherIncome2);
                this.columnNetSalary = new global::System.Data.DataColumn("NetSalary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSalary);
                this.columnMonthlyIncentive = new global::System.Data.DataColumn("MonthlyIncentive", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyIncentive);
                this.columnOtherAddition = new global::System.Data.DataColumn("OtherAddition", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAddition);
                this.columnIsApproved = new global::System.Data.DataColumn("IsApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsApproved);
                this.columnApprovedBy = new global::System.Data.DataColumn("ApprovedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedBy);
                this.columnApprovedTime = new global::System.Data.DataColumn("ApprovedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedTime);
                this.columnFinancialYearId = new global::System.Data.DataColumn("FinancialYearId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinancialYearId);
                this.columnMonthlySalaryId = new global::System.Data.DataColumn("MonthlySalaryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlySalaryId);
                this.columnExtraCreditRemark = new global::System.Data.DataColumn("ExtraCreditRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraCreditRemark);
                this.columnExtraDebitRemark = new global::System.Data.DataColumn("ExtraDebitRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraDebitRemark);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnPreProcessDays = new global::System.Data.DataColumn("PreProcessDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreProcessDays);
                this.columnPreProcessAmount = new global::System.Data.DataColumn("PreProcessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreProcessAmount);
                this.columnPreProcessDebitAmount = new global::System.Data.DataColumn("PreProcessDebitAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreProcessDebitAmount);
                this.columnLWPArrearsAmount = new global::System.Data.DataColumn("LWPArrearsAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWPArrearsAmount);
                this.columnIsOnHold = new global::System.Data.DataColumn("IsOnHold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOnHold);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnEarlyCountPenalty = new global::System.Data.DataColumn("EarlyCountPenalty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyCountPenalty);
                this.columnLateCountPenalty = new global::System.Data.DataColumn("LateCountPenalty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateCountPenalty);
                this.columnLWPDays = new global::System.Data.DataColumn("LWPDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWPDays);
                this.columnPayableDays = new global::System.Data.DataColumn("PayableDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableDays);
                this.columnEarlyCount = new global::System.Data.DataColumn("EarlyCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyCount);
                this.columnLateCount = new global::System.Data.DataColumn("LateCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLateCount);
                this.columnMonthDays = new global::System.Data.DataColumn("MonthDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthDays);
                this.columnHoldArrearsAmount = new global::System.Data.DataColumn("HoldArrearsAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldArrearsAmount);
                this.columnHoldDays = new global::System.Data.DataColumn("HoldDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldDays);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMonthlySalaryDetailId}, true));
                this.columnMonthlySalaryDetailId.AutoIncrement = true;
                this.columnMonthlySalaryDetailId.AutoIncrementSeed = -1;
                this.columnMonthlySalaryDetailId.AutoIncrementStep = -1;
                this.columnMonthlySalaryDetailId.AllowDBNull = false;
                this.columnMonthlySalaryDetailId.ReadOnly = true;
                this.columnMonthlySalaryDetailId.Unique = true;
                this.columnEmpno.MaxLength = 100;
                this.columnExtraCreditRemark.MaxLength = 255;
                this.columnExtraDebitRemark.MaxLength = 255;
                this.columnRemark.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRow NewMonthlySalaryDetailRow() {
                return ((MonthlySalaryDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonthlySalaryDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MonthlySalaryDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonthlySalaryDetailRowChanged != null)) {
                    this.MonthlySalaryDetailRowChanged(this, new MonthlySalaryDetailRowChangeEvent(((MonthlySalaryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonthlySalaryDetailRowChanging != null)) {
                    this.MonthlySalaryDetailRowChanging(this, new MonthlySalaryDetailRowChangeEvent(((MonthlySalaryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonthlySalaryDetailRowDeleted != null)) {
                    this.MonthlySalaryDetailRowDeleted(this, new MonthlySalaryDetailRowChangeEvent(((MonthlySalaryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonthlySalaryDetailRowDeleting != null)) {
                    this.MonthlySalaryDetailRowDeleting(this, new MonthlySalaryDetailRowChangeEvent(((MonthlySalaryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMonthlySalaryDetailRow(MonthlySalaryDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MonthSalaryDataDataSet ds = new MonthSalaryDataDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonthlySalaryDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MonthlySalaryDetailRow : global::System.Data.DataRow {
            
            private MonthlySalaryDetailDataTable tableMonthlySalaryDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MonthlySalaryDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMonthlySalaryDetail = ((MonthlySalaryDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MonthlySalaryDetailId {
                get {
                    return ((int)(this[this.tableMonthlySalaryDetail.MonthlySalaryDetailIdColumn]));
                }
                set {
                    this[this.tableMonthlySalaryDetail.MonthlySalaryDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmployeeId {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.EmployeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeId\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Empno {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalaryDetail.EmpnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Empno\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.EmpnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalaryMonth {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.SalaryMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryMonth\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.SalaryMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalaryYear {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.SalaryYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryYear\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.SalaryYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NoOfWorkingDays {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.NoOfWorkingDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfWorkingDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.NoOfWorkingDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PresentDays {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.PresentDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PresentDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AbsentDays {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.AbsentDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.AbsentDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LeaveDays {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.LeaveDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaveDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LeaveDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Basic {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.BasicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Basic\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.BasicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double GrossSalary {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.GrossSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossSalary\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.GrossSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Hra {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.HraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hra\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.HraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LTA {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.LTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LTA\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FoodAllowance {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.FoodAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FoodAllowance\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.FoodAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DriverAllowance {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.DriverAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverAllowance\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.DriverAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpecialAllowance {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.SpecialAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialAllowance\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.SpecialAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PT {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.PTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PT\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TDS {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.TDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDS\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.TDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PF {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.PFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PF\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MLWF {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.MLWFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLWF\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.MLWFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherDeduction {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeduction\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double EmployeePF {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.EmployeePFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeePF\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.EmployeePFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherDeduction1 {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherDeduction1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeduction1\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherDeduction1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherDeduction2 {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherDeduction2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeduction2\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherDeduction2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalDeduction {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.TotalDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDeduction\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.TotalDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AdvSalary {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.AdvSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvSalary\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.AdvSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CompLoanEMI {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.CompLoanEMIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompLoanEMI\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.CompLoanEMIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OverTime {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OverTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverTime\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Arrears {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.ArrearsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arrears\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.ArrearsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IncAdjustment {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.IncAdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncAdjustment\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.IncAdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherIncome1 {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherIncome1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome1\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherIncome1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherIncome2 {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherIncome2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherIncome2\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherIncome2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetSalary {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.NetSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetSalary\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.NetSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MonthlyIncentive {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.MonthlyIncentiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthlyIncentive\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.MonthlyIncentiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OtherAddition {
                get {
                    try {
                        return ((double)(this[this.tableMonthlySalaryDetail.OtherAdditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAddition\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.OtherAdditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproved {
                get {
                    try {
                        return ((bool)(this[this.tableMonthlySalaryDetail.IsApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsApproved\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.IsApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ApprovedBy {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.ApprovedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedBy\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.ApprovedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApprovedTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMonthlySalaryDetail.ApprovedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedTime\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.ApprovedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FinancialYearId {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.FinancialYearIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinancialYearId\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.FinancialYearIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MonthlySalaryId {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.MonthlySalaryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthlySalaryId\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.MonthlySalaryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExtraCreditRemark {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalaryDetail.ExtraCreditRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraCreditRemark\' in table \'MonthlySalaryDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.ExtraCreditRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExtraDebitRemark {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalaryDetail.ExtraDebitRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraDebitRemark\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.ExtraDebitRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalaryDetail.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PreProcessDays {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.PreProcessDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreProcessDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PreProcessDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PreProcessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.PreProcessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreProcessAmount\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PreProcessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PreProcessDebitAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.PreProcessDebitAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreProcessDebitAmount\' in table \'MonthlySalaryDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PreProcessDebitAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LWPArrearsAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.LWPArrearsAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LWPArrearsAmount\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LWPArrearsAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnHold {
                get {
                    try {
                        return ((bool)(this[this.tableMonthlySalaryDetail.IsOnHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOnHold\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.IsOnHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableMonthlySalaryDetail.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EarlyCountPenalty {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.EarlyCountPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyCountPenalty\' in table \'MonthlySalaryDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.EarlyCountPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LateCountPenalty {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.LateCountPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateCountPenalty\' in table \'MonthlySalaryDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LateCountPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LWPDays {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.LWPDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LWPDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LWPDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PayableDays {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.PayableDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.PayableDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EarlyCount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.EarlyCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyCount\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.EarlyCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LateCount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.LateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LateCount\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.LateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MonthDays {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.MonthDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.MonthDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HoldArrearsAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.HoldArrearsAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldArrearsAmount\' in table \'MonthlySalaryDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.HoldArrearsAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HoldDays {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalaryDetail.HoldDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldDays\' in table \'MonthlySalaryDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalaryDetail.HoldDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeIdNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.EmployeeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeIdNull() {
                this[this.tableMonthlySalaryDetail.EmployeeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpnoNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.EmpnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpnoNull() {
                this[this.tableMonthlySalaryDetail.EmpnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryMonthNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.SalaryMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryMonthNull() {
                this[this.tableMonthlySalaryDetail.SalaryMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryYearNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.SalaryYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryYearNull() {
                this[this.tableMonthlySalaryDetail.SalaryYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoOfWorkingDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.NoOfWorkingDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoOfWorkingDaysNull() {
                this[this.tableMonthlySalaryDetail.NoOfWorkingDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPresentDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PresentDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPresentDaysNull() {
                this[this.tableMonthlySalaryDetail.PresentDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbsentDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.AbsentDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbsentDaysNull() {
                this[this.tableMonthlySalaryDetail.AbsentDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLeaveDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LeaveDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLeaveDaysNull() {
                this[this.tableMonthlySalaryDetail.LeaveDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBasicNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.BasicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBasicNull() {
                this[this.tableMonthlySalaryDetail.BasicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossSalaryNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.GrossSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossSalaryNull() {
                this[this.tableMonthlySalaryDetail.GrossSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHraNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.HraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHraNull() {
                this[this.tableMonthlySalaryDetail.HraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLTANull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLTANull() {
                this[this.tableMonthlySalaryDetail.LTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFoodAllowanceNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.FoodAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFoodAllowanceNull() {
                this[this.tableMonthlySalaryDetail.FoodAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDriverAllowanceNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.DriverAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDriverAllowanceNull() {
                this[this.tableMonthlySalaryDetail.DriverAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecialAllowanceNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.SpecialAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecialAllowanceNull() {
                this[this.tableMonthlySalaryDetail.SpecialAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPTNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPTNull() {
                this[this.tableMonthlySalaryDetail.PTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTDSNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.TDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTDSNull() {
                this[this.tableMonthlySalaryDetail.TDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPFNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPFNull() {
                this[this.tableMonthlySalaryDetail.PFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMLWFNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.MLWFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMLWFNull() {
                this[this.tableMonthlySalaryDetail.MLWFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDeductionNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDeductionNull() {
                this[this.tableMonthlySalaryDetail.OtherDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeePFNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.EmployeePFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeePFNull() {
                this[this.tableMonthlySalaryDetail.EmployeePFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDeduction1Null() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherDeduction1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDeduction1Null() {
                this[this.tableMonthlySalaryDetail.OtherDeduction1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDeduction2Null() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherDeduction2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDeduction2Null() {
                this[this.tableMonthlySalaryDetail.OtherDeduction2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDeductionNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.TotalDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDeductionNull() {
                this[this.tableMonthlySalaryDetail.TotalDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdvSalaryNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.AdvSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdvSalaryNull() {
                this[this.tableMonthlySalaryDetail.AdvSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompLoanEMINull() {
                return this.IsNull(this.tableMonthlySalaryDetail.CompLoanEMIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompLoanEMINull() {
                this[this.tableMonthlySalaryDetail.CompLoanEMIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverTimeNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.OverTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverTimeNull() {
                this[this.tableMonthlySalaryDetail.OverTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrearsNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.ArrearsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrearsNull() {
                this[this.tableMonthlySalaryDetail.ArrearsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIncAdjustmentNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.IncAdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIncAdjustmentNull() {
                this[this.tableMonthlySalaryDetail.IncAdjustmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherIncome1Null() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherIncome1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherIncome1Null() {
                this[this.tableMonthlySalaryDetail.OtherIncome1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherIncome2Null() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherIncome2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherIncome2Null() {
                this[this.tableMonthlySalaryDetail.OtherIncome2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetSalaryNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.NetSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetSalaryNull() {
                this[this.tableMonthlySalaryDetail.NetSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthlyIncentiveNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.MonthlyIncentiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthlyIncentiveNull() {
                this[this.tableMonthlySalaryDetail.MonthlyIncentiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherAdditionNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.OtherAdditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherAdditionNull() {
                this[this.tableMonthlySalaryDetail.OtherAdditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsApprovedNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.IsApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsApprovedNull() {
                this[this.tableMonthlySalaryDetail.IsApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedByNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.ApprovedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedByNull() {
                this[this.tableMonthlySalaryDetail.ApprovedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedTimeNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.ApprovedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedTimeNull() {
                this[this.tableMonthlySalaryDetail.ApprovedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinancialYearIdNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.FinancialYearIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinancialYearIdNull() {
                this[this.tableMonthlySalaryDetail.FinancialYearIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthlySalaryIdNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.MonthlySalaryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthlySalaryIdNull() {
                this[this.tableMonthlySalaryDetail.MonthlySalaryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtraCreditRemarkNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.ExtraCreditRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtraCreditRemarkNull() {
                this[this.tableMonthlySalaryDetail.ExtraCreditRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtraDebitRemarkNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.ExtraDebitRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtraDebitRemarkNull() {
                this[this.tableMonthlySalaryDetail.ExtraDebitRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableMonthlySalaryDetail.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreProcessDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PreProcessDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreProcessDaysNull() {
                this[this.tableMonthlySalaryDetail.PreProcessDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreProcessAmountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PreProcessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreProcessAmountNull() {
                this[this.tableMonthlySalaryDetail.PreProcessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreProcessDebitAmountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PreProcessDebitAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreProcessDebitAmountNull() {
                this[this.tableMonthlySalaryDetail.PreProcessDebitAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLWPArrearsAmountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LWPArrearsAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLWPArrearsAmountNull() {
                this[this.tableMonthlySalaryDetail.LWPArrearsAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsOnHoldNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.IsOnHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsOnHoldNull() {
                this[this.tableMonthlySalaryDetail.IsOnHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusNull() {
                this[this.tableMonthlySalaryDetail.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEarlyCountPenaltyNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.EarlyCountPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEarlyCountPenaltyNull() {
                this[this.tableMonthlySalaryDetail.EarlyCountPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateCountPenaltyNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LateCountPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateCountPenaltyNull() {
                this[this.tableMonthlySalaryDetail.LateCountPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLWPDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LWPDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLWPDaysNull() {
                this[this.tableMonthlySalaryDetail.LWPDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayableDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.PayableDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayableDaysNull() {
                this[this.tableMonthlySalaryDetail.PayableDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEarlyCountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.EarlyCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEarlyCountNull() {
                this[this.tableMonthlySalaryDetail.EarlyCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLateCountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.LateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLateCountNull() {
                this[this.tableMonthlySalaryDetail.LateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.MonthDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthDaysNull() {
                this[this.tableMonthlySalaryDetail.MonthDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldArrearsAmountNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.HoldArrearsAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldArrearsAmountNull() {
                this[this.tableMonthlySalaryDetail.HoldArrearsAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldDaysNull() {
                return this.IsNull(this.tableMonthlySalaryDetail.HoldDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldDaysNull() {
                this[this.tableMonthlySalaryDetail.HoldDaysColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MonthlySalaryDetailRowChangeEvent : global::System.EventArgs {
            
            private MonthlySalaryDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRowChangeEvent(MonthlySalaryDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MonthlySalaryDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WetosMVC.Datasets.MonthSalaryDataDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MonthlySalaryDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MonthlySalaryDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MonthlySalaryDetail";
            tableMapping.ColumnMappings.Add("MonthlySalaryDetailId", "MonthlySalaryDetailId");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("Empno", "Empno");
            tableMapping.ColumnMappings.Add("SalaryMonth", "SalaryMonth");
            tableMapping.ColumnMappings.Add("SalaryYear", "SalaryYear");
            tableMapping.ColumnMappings.Add("NoOfWorkingDays", "NoOfWorkingDays");
            tableMapping.ColumnMappings.Add("PresentDays", "PresentDays");
            tableMapping.ColumnMappings.Add("AbsentDays", "AbsentDays");
            tableMapping.ColumnMappings.Add("LeaveDays", "LeaveDays");
            tableMapping.ColumnMappings.Add("Basic", "Basic");
            tableMapping.ColumnMappings.Add("GrossSalary", "GrossSalary");
            tableMapping.ColumnMappings.Add("Hra", "Hra");
            tableMapping.ColumnMappings.Add("LTA", "LTA");
            tableMapping.ColumnMappings.Add("FoodAllowance", "FoodAllowance");
            tableMapping.ColumnMappings.Add("DriverAllowance", "DriverAllowance");
            tableMapping.ColumnMappings.Add("SpecialAllowance", "SpecialAllowance");
            tableMapping.ColumnMappings.Add("PT", "PT");
            tableMapping.ColumnMappings.Add("TDS", "TDS");
            tableMapping.ColumnMappings.Add("PF", "PF");
            tableMapping.ColumnMappings.Add("MLWF", "MLWF");
            tableMapping.ColumnMappings.Add("OtherDeduction", "OtherDeduction");
            tableMapping.ColumnMappings.Add("EmployeePF", "EmployeePF");
            tableMapping.ColumnMappings.Add("OtherDeduction1", "OtherDeduction1");
            tableMapping.ColumnMappings.Add("OtherDeduction2", "OtherDeduction2");
            tableMapping.ColumnMappings.Add("TotalDeduction", "TotalDeduction");
            tableMapping.ColumnMappings.Add("AdvSalary", "AdvSalary");
            tableMapping.ColumnMappings.Add("CompLoanEMI", "CompLoanEMI");
            tableMapping.ColumnMappings.Add("OverTime", "OverTime");
            tableMapping.ColumnMappings.Add("Arrears", "Arrears");
            tableMapping.ColumnMappings.Add("IncAdjustment", "IncAdjustment");
            tableMapping.ColumnMappings.Add("OtherIncome1", "OtherIncome1");
            tableMapping.ColumnMappings.Add("OtherIncome2", "OtherIncome2");
            tableMapping.ColumnMappings.Add("NetSalary", "NetSalary");
            tableMapping.ColumnMappings.Add("MonthlyIncentive", "MonthlyIncentive");
            tableMapping.ColumnMappings.Add("OtherAddition", "OtherAddition");
            tableMapping.ColumnMappings.Add("IsApproved", "IsApproved");
            tableMapping.ColumnMappings.Add("ApprovedBy", "ApprovedBy");
            tableMapping.ColumnMappings.Add("ApprovedTime", "ApprovedTime");
            tableMapping.ColumnMappings.Add("FinancialYearId", "FinancialYearId");
            tableMapping.ColumnMappings.Add("MonthlySalaryId", "MonthlySalaryId");
            tableMapping.ColumnMappings.Add("ExtraCreditRemark", "ExtraCreditRemark");
            tableMapping.ColumnMappings.Add("ExtraDebitRemark", "ExtraDebitRemark");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("PreProcessDays", "PreProcessDays");
            tableMapping.ColumnMappings.Add("PreProcessAmount", "PreProcessAmount");
            tableMapping.ColumnMappings.Add("PreProcessDebitAmount", "PreProcessDebitAmount");
            tableMapping.ColumnMappings.Add("LWPArrearsAmount", "LWPArrearsAmount");
            tableMapping.ColumnMappings.Add("IsOnHold", "IsOnHold");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("EarlyCountPenalty", "EarlyCountPenalty");
            tableMapping.ColumnMappings.Add("LateCountPenalty", "LateCountPenalty");
            tableMapping.ColumnMappings.Add("LWPDays", "LWPDays");
            tableMapping.ColumnMappings.Add("PayableDays", "PayableDays");
            tableMapping.ColumnMappings.Add("EarlyCount", "EarlyCount");
            tableMapping.ColumnMappings.Add("LateCount", "LateCount");
            tableMapping.ColumnMappings.Add("MonthDays", "MonthDays");
            tableMapping.ColumnMappings.Add("HoldArrearsAmount", "HoldArrearsAmount");
            tableMapping.ColumnMappings.Add("HoldDays", "HoldDays");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MonthlySalaryDetail] WHERE (([MonthlySalaryDetailId] = @Origin" +
                "al_MonthlySalaryDetailId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlySalaryDetailId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlySalaryDetailId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MonthlySalaryDetail] ([EmployeeId], [Empno], [SalaryMonth], [S" +
                "alaryYear], [NoOfWorkingDays], [PresentDays], [AbsentDays], [LeaveDays], [Basic]" +
                ", [GrossSalary], [Hra], [LTA], [FoodAllowance], [DriverAllowance], [SpecialAllow" +
                "ance], [PT], [TDS], [PF], [MLWF], [OtherDeduction], [EmployeePF], [OtherDeductio" +
                "n1], [OtherDeduction2], [TotalDeduction], [AdvSalary], [CompLoanEMI], [OverTime]" +
                ", [Arrears], [IncAdjustment], [OtherIncome1], [OtherIncome2], [NetSalary], [Mont" +
                "hlyIncentive], [OtherAddition], [IsApproved], [ApprovedBy], [ApprovedTime], [Fin" +
                "ancialYearId], [MonthlySalaryId], [ExtraCreditRemark], [ExtraDebitRemark], [Rema" +
                "rk], [PreProcessDays], [PreProcessAmount], [PreProcessDebitAmount], [LWPArrearsA" +
                "mount], [IsOnHold], [Status], [EarlyCountPenalty], [LateCountPenalty], [LWPDays]" +
                ", [PayableDays], [EarlyCount], [LateCount], [MonthDays], [HoldArrearsAmount], [H" +
                "oldDays]) VALUES (@EmployeeId, @Empno, @SalaryMonth, @SalaryYear, @NoOfWorkingDa" +
                "ys, @PresentDays, @AbsentDays, @LeaveDays, @Basic, @GrossSalary, @Hra, @LTA, @Fo" +
                "odAllowance, @DriverAllowance, @SpecialAllowance, @PT, @TDS, @PF, @MLWF, @OtherD" +
                "eduction, @EmployeePF, @OtherDeduction1, @OtherDeduction2, @TotalDeduction, @Adv" +
                "Salary, @CompLoanEMI, @OverTime, @Arrears, @IncAdjustment, @OtherIncome1, @Other" +
                "Income2, @NetSalary, @MonthlyIncentive, @OtherAddition, @IsApproved, @ApprovedBy" +
                ", @ApprovedTime, @FinancialYearId, @MonthlySalaryId, @ExtraCreditRemark, @ExtraD" +
                "ebitRemark, @Remark, @PreProcessDays, @PreProcessAmount, @PreProcessDebitAmount," +
                " @LWPArrearsAmount, @IsOnHold, @Status, @EarlyCountPenalty, @LateCountPenalty, @" +
                "LWPDays, @PayableDays, @EarlyCount, @LateCount, @MonthDays, @HoldArrearsAmount, " +
                "@HoldDays)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWorkingDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AbsentDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AbsentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaveDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Basic", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Basic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrossSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrossSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hra", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hra", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoodAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoodAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLWF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MLWF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeePF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeePF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalDeduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompLoanEMI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompLoanEMI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arrears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arrears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncAdjustment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncAdjustment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherIncome1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherIncome1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherIncome2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherIncome2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyIncentive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyIncentive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherAddition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherAddition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsApproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinancialYearId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinancialYearId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlySalaryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlySalaryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraCreditRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraCreditRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraDebitRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraDebitRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessDebitAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessDebitAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWPArrearsAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LWPArrearsAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsOnHold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnHold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarlyCountPenalty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EarlyCountPenalty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateCountPenalty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateCountPenalty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWPDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LWPDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayableDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PayableDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarlyCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EarlyCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MonthDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldArrearsAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HoldArrearsAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HoldDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MonthlySalaryDetail] SET [EmployeeId] = @EmployeeId, [Empno] = @Emp" +
                "no, [SalaryMonth] = @SalaryMonth, [SalaryYear] = @SalaryYear, [NoOfWorkingDays] " +
                "= @NoOfWorkingDays, [PresentDays] = @PresentDays, [AbsentDays] = @AbsentDays, [L" +
                "eaveDays] = @LeaveDays, [Basic] = @Basic, [GrossSalary] = @GrossSalary, [Hra] = " +
                "@Hra, [LTA] = @LTA, [FoodAllowance] = @FoodAllowance, [DriverAllowance] = @Drive" +
                "rAllowance, [SpecialAllowance] = @SpecialAllowance, [PT] = @PT, [TDS] = @TDS, [P" +
                "F] = @PF, [MLWF] = @MLWF, [OtherDeduction] = @OtherDeduction, [EmployeePF] = @Em" +
                "ployeePF, [OtherDeduction1] = @OtherDeduction1, [OtherDeduction2] = @OtherDeduct" +
                "ion2, [TotalDeduction] = @TotalDeduction, [AdvSalary] = @AdvSalary, [CompLoanEMI" +
                "] = @CompLoanEMI, [OverTime] = @OverTime, [Arrears] = @Arrears, [IncAdjustment] " +
                "= @IncAdjustment, [OtherIncome1] = @OtherIncome1, [OtherIncome2] = @OtherIncome2" +
                ", [NetSalary] = @NetSalary, [MonthlyIncentive] = @MonthlyIncentive, [OtherAdditi" +
                "on] = @OtherAddition, [IsApproved] = @IsApproved, [ApprovedBy] = @ApprovedBy, [A" +
                "pprovedTime] = @ApprovedTime, [FinancialYearId] = @FinancialYearId, [MonthlySala" +
                "ryId] = @MonthlySalaryId, [ExtraCreditRemark] = @ExtraCreditRemark, [ExtraDebitR" +
                "emark] = @ExtraDebitRemark, [Remark] = @Remark, [PreProcessDays] = @PreProcessDa" +
                "ys, [PreProcessAmount] = @PreProcessAmount, [PreProcessDebitAmount] = @PreProces" +
                "sDebitAmount, [LWPArrearsAmount] = @LWPArrearsAmount, [IsOnHold] = @IsOnHold, [S" +
                "tatus] = @Status, [EarlyCountPenalty] = @EarlyCountPenalty, [LateCountPenalty] =" +
                " @LateCountPenalty, [LWPDays] = @LWPDays, [PayableDays] = @PayableDays, [EarlyCo" +
                "unt] = @EarlyCount, [LateCount] = @LateCount, [MonthDays] = @MonthDays, [HoldArr" +
                "earsAmount] = @HoldArrearsAmount, [HoldDays] = @HoldDays WHERE (([MonthlySalaryD" +
                "etailId] = @Original_MonthlySalaryDetailId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Empno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoOfWorkingDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoOfWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PresentDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PresentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AbsentDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AbsentDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LeaveDays", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LeaveDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Basic", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Basic", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GrossSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GrossSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hra", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hra", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FoodAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FoodAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DriverAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DriverAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialAllowance", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialAllowance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDS", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLWF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MLWF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeePF", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeePF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeduction2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherDeduction2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalDeduction", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalDeduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompLoanEMI", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompLoanEMI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arrears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arrears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncAdjustment", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncAdjustment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherIncome1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherIncome1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherIncome2", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherIncome2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetSalary", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NetSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyIncentive", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyIncentive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherAddition", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherAddition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsApproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsApproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ApprovedTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ApprovedTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinancialYearId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinancialYearId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlySalaryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlySalaryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraCreditRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraCreditRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraDebitRemark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraDebitRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Remark", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Remark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PreProcessDebitAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PreProcessDebitAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWPArrearsAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LWPArrearsAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsOnHold", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsOnHold", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarlyCountPenalty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EarlyCountPenalty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateCountPenalty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateCountPenalty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWPDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LWPDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayableDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PayableDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EarlyCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EarlyCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LateCount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MonthDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldArrearsAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HoldArrearsAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HoldDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HoldDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MonthlySalaryDetailId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlySalaryDetailId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["WetosMvcConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT MonthlySalaryDetailId, EmployeeId, Empno, SalaryMonth, SalaryYear, NoOfWorkingDays, PresentDays, AbsentDays, LeaveDays, Basic, GrossSalary, Hra, LTA, FoodAllowance, DriverAllowance, SpecialAllowance, PT, TDS, PF, MLWF, OtherDeduction, EmployeePF, OtherDeduction1, OtherDeduction2, TotalDeduction, AdvSalary, CompLoanEMI, OverTime, Arrears, IncAdjustment, OtherIncome1, OtherIncome2, NetSalary, MonthlyIncentive, OtherAddition, IsApproved, ApprovedBy, ApprovedTime, FinancialYearId, MonthlySalaryId, ExtraCreditRemark, ExtraDebitRemark, Remark, PreProcessDays, PreProcessAmount, PreProcessDebitAmount, LWPArrearsAmount, IsOnHold, Status, EarlyCountPenalty, LateCountPenalty, LWPDays, PayableDays, EarlyCount, LateCount, MonthDays, HoldArrearsAmount, HoldDays FROM dbo.MonthlySalaryDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MonthSalaryDataDataSet.MonthlySalaryDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MonthSalaryDataDataSet.MonthlySalaryDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MonthSalaryDataDataSet.MonthlySalaryDetailDataTable dataTable = new MonthSalaryDataDataSet.MonthlySalaryDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MonthSalaryDataDataSet.MonthlySalaryDetailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MonthSalaryDataDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MonthlySalaryDetail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_MonthlySalaryDetailId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_MonthlySalaryDetailId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> EmployeeId, 
                    string Empno, 
                    global::System.Nullable<int> SalaryMonth, 
                    global::System.Nullable<int> SalaryYear, 
                    global::System.Nullable<double> NoOfWorkingDays, 
                    global::System.Nullable<double> PresentDays, 
                    global::System.Nullable<double> AbsentDays, 
                    global::System.Nullable<double> LeaveDays, 
                    global::System.Nullable<double> Basic, 
                    global::System.Nullable<double> GrossSalary, 
                    global::System.Nullable<double> Hra, 
                    global::System.Nullable<double> LTA, 
                    global::System.Nullable<double> FoodAllowance, 
                    global::System.Nullable<double> DriverAllowance, 
                    global::System.Nullable<double> SpecialAllowance, 
                    global::System.Nullable<double> PT, 
                    global::System.Nullable<double> TDS, 
                    global::System.Nullable<double> PF, 
                    global::System.Nullable<double> MLWF, 
                    global::System.Nullable<double> OtherDeduction, 
                    global::System.Nullable<double> EmployeePF, 
                    global::System.Nullable<double> OtherDeduction1, 
                    global::System.Nullable<double> OtherDeduction2, 
                    global::System.Nullable<double> TotalDeduction, 
                    global::System.Nullable<double> AdvSalary, 
                    global::System.Nullable<double> CompLoanEMI, 
                    global::System.Nullable<double> OverTime, 
                    global::System.Nullable<double> Arrears, 
                    global::System.Nullable<double> IncAdjustment, 
                    global::System.Nullable<double> OtherIncome1, 
                    global::System.Nullable<double> OtherIncome2, 
                    global::System.Nullable<double> NetSalary, 
                    global::System.Nullable<double> MonthlyIncentive, 
                    global::System.Nullable<double> OtherAddition, 
                    global::System.Nullable<bool> IsApproved, 
                    global::System.Nullable<int> ApprovedBy, 
                    global::System.Nullable<global::System.DateTime> ApprovedTime, 
                    global::System.Nullable<int> FinancialYearId, 
                    global::System.Nullable<int> MonthlySalaryId, 
                    string ExtraCreditRemark, 
                    string ExtraDebitRemark, 
                    string Remark, 
                    global::System.Nullable<decimal> PreProcessDays, 
                    global::System.Nullable<decimal> PreProcessAmount, 
                    global::System.Nullable<decimal> PreProcessDebitAmount, 
                    global::System.Nullable<decimal> LWPArrearsAmount, 
                    global::System.Nullable<bool> IsOnHold, 
                    global::System.Nullable<int> Status, 
                    global::System.Nullable<decimal> EarlyCountPenalty, 
                    global::System.Nullable<decimal> LateCountPenalty, 
                    global::System.Nullable<decimal> LWPDays, 
                    global::System.Nullable<decimal> PayableDays, 
                    global::System.Nullable<decimal> EarlyCount, 
                    global::System.Nullable<decimal> LateCount, 
                    global::System.Nullable<decimal> MonthDays, 
                    global::System.Nullable<decimal> HoldArrearsAmount, 
                    global::System.Nullable<decimal> HoldDays) {
            if ((EmployeeId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EmployeeId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Empno == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Empno));
            }
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SalaryMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SalaryYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SalaryYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NoOfWorkingDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NoOfWorkingDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PresentDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(PresentDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AbsentDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(AbsentDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((LeaveDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(LeaveDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Basic.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Basic.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((GrossSalary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(GrossSalary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Hra.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Hra.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((LTA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(LTA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((FoodAllowance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(FoodAllowance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DriverAllowance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(DriverAllowance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SpecialAllowance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(SpecialAllowance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((PT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(PT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TDS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(TDS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(PF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((MLWF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(MLWF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(OtherDeduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EmployeePF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(EmployeePF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(OtherDeduction1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(OtherDeduction2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TotalDeduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(TotalDeduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((AdvSalary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(AdvSalary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((CompLoanEMI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(CompLoanEMI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((OverTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(OverTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Arrears.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Arrears.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((IncAdjustment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(IncAdjustment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OtherIncome1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(OtherIncome1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((OtherIncome2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(OtherIncome2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NetSalary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(NetSalary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((MonthlyIncentive.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(MonthlyIncentive.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((OtherAddition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(OtherAddition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((IsApproved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(IsApproved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ApprovedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(ApprovedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ApprovedTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(ApprovedTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((FinancialYearId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(FinancialYearId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((MonthlySalaryId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(MonthlySalaryId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ExtraCreditRemark == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(ExtraCreditRemark));
            }
            if ((ExtraDebitRemark == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(ExtraDebitRemark));
            }
            if ((Remark == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(Remark));
            }
            if ((PreProcessDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(PreProcessDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((PreProcessAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(PreProcessAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((PreProcessDebitAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(PreProcessDebitAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((LWPArrearsAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(LWPArrearsAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((IsOnHold.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(IsOnHold.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(Status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((EarlyCountPenalty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(EarlyCountPenalty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((LateCountPenalty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(LateCountPenalty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((LWPDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(LWPDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((PayableDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(PayableDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EarlyCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(EarlyCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((LateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(LateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((MonthDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(MonthDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HoldArrearsAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(HoldArrearsAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((HoldDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(HoldDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> EmployeeId, 
                    string Empno, 
                    global::System.Nullable<int> SalaryMonth, 
                    global::System.Nullable<int> SalaryYear, 
                    global::System.Nullable<double> NoOfWorkingDays, 
                    global::System.Nullable<double> PresentDays, 
                    global::System.Nullable<double> AbsentDays, 
                    global::System.Nullable<double> LeaveDays, 
                    global::System.Nullable<double> Basic, 
                    global::System.Nullable<double> GrossSalary, 
                    global::System.Nullable<double> Hra, 
                    global::System.Nullable<double> LTA, 
                    global::System.Nullable<double> FoodAllowance, 
                    global::System.Nullable<double> DriverAllowance, 
                    global::System.Nullable<double> SpecialAllowance, 
                    global::System.Nullable<double> PT, 
                    global::System.Nullable<double> TDS, 
                    global::System.Nullable<double> PF, 
                    global::System.Nullable<double> MLWF, 
                    global::System.Nullable<double> OtherDeduction, 
                    global::System.Nullable<double> EmployeePF, 
                    global::System.Nullable<double> OtherDeduction1, 
                    global::System.Nullable<double> OtherDeduction2, 
                    global::System.Nullable<double> TotalDeduction, 
                    global::System.Nullable<double> AdvSalary, 
                    global::System.Nullable<double> CompLoanEMI, 
                    global::System.Nullable<double> OverTime, 
                    global::System.Nullable<double> Arrears, 
                    global::System.Nullable<double> IncAdjustment, 
                    global::System.Nullable<double> OtherIncome1, 
                    global::System.Nullable<double> OtherIncome2, 
                    global::System.Nullable<double> NetSalary, 
                    global::System.Nullable<double> MonthlyIncentive, 
                    global::System.Nullable<double> OtherAddition, 
                    global::System.Nullable<bool> IsApproved, 
                    global::System.Nullable<int> ApprovedBy, 
                    global::System.Nullable<global::System.DateTime> ApprovedTime, 
                    global::System.Nullable<int> FinancialYearId, 
                    global::System.Nullable<int> MonthlySalaryId, 
                    string ExtraCreditRemark, 
                    string ExtraDebitRemark, 
                    string Remark, 
                    global::System.Nullable<decimal> PreProcessDays, 
                    global::System.Nullable<decimal> PreProcessAmount, 
                    global::System.Nullable<decimal> PreProcessDebitAmount, 
                    global::System.Nullable<decimal> LWPArrearsAmount, 
                    global::System.Nullable<bool> IsOnHold, 
                    global::System.Nullable<int> Status, 
                    global::System.Nullable<decimal> EarlyCountPenalty, 
                    global::System.Nullable<decimal> LateCountPenalty, 
                    global::System.Nullable<decimal> LWPDays, 
                    global::System.Nullable<decimal> PayableDays, 
                    global::System.Nullable<decimal> EarlyCount, 
                    global::System.Nullable<decimal> LateCount, 
                    global::System.Nullable<decimal> MonthDays, 
                    global::System.Nullable<decimal> HoldArrearsAmount, 
                    global::System.Nullable<decimal> HoldDays, 
                    int Original_MonthlySalaryDetailId) {
            if ((EmployeeId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EmployeeId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Empno == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Empno));
            }
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SalaryMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SalaryYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SalaryYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NoOfWorkingDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NoOfWorkingDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((PresentDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(PresentDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((AbsentDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(AbsentDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((LeaveDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(LeaveDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Basic.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Basic.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((GrossSalary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(GrossSalary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Hra.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Hra.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((LTA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(LTA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((FoodAllowance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(FoodAllowance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DriverAllowance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(DriverAllowance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SpecialAllowance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(SpecialAllowance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((PT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(PT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((TDS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(TDS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(PF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((MLWF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(MLWF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(OtherDeduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EmployeePF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(EmployeePF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(OtherDeduction1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((OtherDeduction2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(OtherDeduction2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TotalDeduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(TotalDeduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((AdvSalary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(AdvSalary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((CompLoanEMI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(CompLoanEMI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((OverTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(OverTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Arrears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Arrears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((IncAdjustment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(IncAdjustment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OtherIncome1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(OtherIncome1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((OtherIncome2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(OtherIncome2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NetSalary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(NetSalary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((MonthlyIncentive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(MonthlyIncentive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((OtherAddition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(OtherAddition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((IsApproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(IsApproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ApprovedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(ApprovedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ApprovedTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(ApprovedTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((FinancialYearId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(FinancialYearId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((MonthlySalaryId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(MonthlySalaryId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((ExtraCreditRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(ExtraCreditRemark));
            }
            if ((ExtraDebitRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(ExtraDebitRemark));
            }
            if ((Remark == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Remark));
            }
            if ((PreProcessDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(PreProcessDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((PreProcessAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(PreProcessAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((PreProcessDebitAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(PreProcessDebitAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((LWPArrearsAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(LWPArrearsAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((IsOnHold.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(IsOnHold.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((EarlyCountPenalty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(EarlyCountPenalty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((LateCountPenalty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(LateCountPenalty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((LWPDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(LWPDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((PayableDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(PayableDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EarlyCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(EarlyCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((LateCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(LateCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((MonthDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(MonthDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HoldArrearsAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(HoldArrearsAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((HoldDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(HoldDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_MonthlySalaryDetailId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MonthlySalaryDetailTableAdapter _monthlySalaryDetailTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MonthlySalaryDetailTableAdapter MonthlySalaryDetailTableAdapter {
            get {
                return this._monthlySalaryDetailTableAdapter;
            }
            set {
                this._monthlySalaryDetailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._monthlySalaryDetailTableAdapter != null) 
                            && (this._monthlySalaryDetailTableAdapter.Connection != null))) {
                    return this._monthlySalaryDetailTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._monthlySalaryDetailTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(MonthSalaryDataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryDetailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MonthlySalaryDetail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._monthlySalaryDetailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(MonthSalaryDataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryDetailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MonthlySalaryDetail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._monthlySalaryDetailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(MonthSalaryDataDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._monthlySalaryDetailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MonthlySalaryDetail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._monthlySalaryDetailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(MonthSalaryDataDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._monthlySalaryDetailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._monthlySalaryDetailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._monthlySalaryDetailTableAdapter != null)) {
                    revertConnections.Add(this._monthlySalaryDetailTableAdapter, this._monthlySalaryDetailTableAdapter.Connection);
                    this._monthlySalaryDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._monthlySalaryDetailTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._monthlySalaryDetailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._monthlySalaryDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._monthlySalaryDetailTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._monthlySalaryDetailTableAdapter != null)) {
                    this._monthlySalaryDetailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._monthlySalaryDetailTableAdapter]));
                    this._monthlySalaryDetailTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591