@model WetosDB.DailyTransaction
@{
    ViewBag.Title = "ExceptionEntryEdit";
}
@System.Web.Optimization.Styles.Render("~/Content/DatePicker")
@System.Web.Optimization.Scripts.Render("~/bundles/DatePicker")
@System.Web.Optimization.Styles.Render("~/Content/Select2")
   @System.Web.Optimization.Scripts.Render("~/bundles/Select2")
     @System.Web.Optimization.Scripts.Render("~/bundles/InputMask")
@{var active = ViewBag.active;}
<div class="page-content-wrapper" id="page_content">
    <div class="page-content">
        <section class="content-header">
      <h1>
        Exception Entry
        <small>Apply</small>
      </h1>
    
      <div class="row">
                <div class="col-md-12">
                    <ul class="page-breadcrumb breadcrumb">
                        <li>
                            <i class="fa fa-home"></i>
                            <a href="@Url.Action("Index", "Home")">Home </a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                         <a href="#">Applications</a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                            <a href="@Url.Action("ExceptionEntryListView", "WetosApplication")">Exception</a>
                        </li>
                        <li class="pull-right">
                            <div id="dashboard-report"  data-toggle="tooltip" title="Today's date">
                                <span style="cursor:pointer" class="back "  data-toggle="tooltip" title="Back" id="goback"><i class="fa fa-arrow-left"></i></span>
                                <i class="fa fa-calendar"></i>
                                <span>@DateTime.Now.ToLongDateString()</span>                           
                            </div>
                        </li>              
                    </ul>
                </div>
            </div>
<br />
 </section>
        <section class="content">
      
          <div class="box">
            
           
            <!-- /.box-header -->
            <div class="box-body">
               

@using (Html.BeginForm())
{
    <div style="color:Red">
    @Html.ValidationSummary(false)
    </div>
    <fieldset>
        @Html.HiddenFor(model => model.DailyTrnId)
        @* @Html.HiddenFor(model => model.TranDate)*@
         @Html.HiddenFor(model => model.ActualStatus)
         @Html.HiddenFor(model => model.BranchId)
         @Html.HiddenFor(model => model.CompanyId)
         @Html.HiddenFor(model => model.Early)
         @Html.HiddenFor(model => model.EmployeeId)
         @Html.HiddenFor(model => model.ExtraHrs)
         @Html.HiddenFor(model => model.Late)
         @Html.HiddenFor(model => model.LateCount)
         @Html.HiddenFor(model => model.Lock)
         @Html.HiddenFor(model => model.Login1)
         @Html.HiddenFor(model => model.LogOut1)
       @*  @Html.HiddenFor(model => model.Login)*@    @* Commented by Rajas on 2 MARCH 2017 to get value of Login on view*@
         @*@Html.HiddenFor(model => model.LogOut)*@     @* Commented by Rajas on 2 MARCH 2017 to get value of Logout on view*@
         @Html.HiddenFor(model => model.OTInTime)
         @Html.HiddenFor(model => model.OTOutTime)
         @Html.HiddenFor(model => model.PostinFlag)
         @Html.HiddenFor(model => model.PreviousLogin)
         @Html.HiddenFor(model => model.PreviousLogin1)
         @Html.HiddenFor(model => model.PreviousLogOut)
         @Html.HiddenFor(model => model.PreviousLogOut1)
         @Html.HiddenFor(model => model.PreviousShiftId)
         @Html.HiddenFor(model => model.SanctionedCOHrs)
         @Html.HiddenFor(model => model.TStatus)
         @Html.HiddenFor(model => model.WorkingHrs)
         @Html.HiddenFor(model => model.Status)
          @Html.HiddenFor(model => model.ShiftId)
        <input type="text" id="active" value="@active" style="display:none"/>
       

       @* <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployeeId)
            @Html.ValidationMessageFor(model => model.EmployeeId)
        </div>*@
        <div class="row">
       
         <div class = "col-md-2">
          Entry Date
        </div>
        <div class="col-md-2">
        <label>@Model.TranDate.ToString("dd-MMM-yyyy")</label>
            @*  @{var TranDate = Model.TranDate == null ? "" : Model.TranDate.ToString("dd-MMM-yyyy");}
             <label>@TranDate</label>*@
        </div>
       
       <div class="col-md-1"></div>
         <div class = "col-md-1">
           Status
        </div>
        <div class="col-md-1">
       @* @{ var LoginTime = Model.Login.ToShortTimeString();}*@
           @* @Html.TextBoxFor(model => LoginTime, new { name = "LoginTime", style = "width:250px" })*@
            @* Updated by Rajas on 2 MARCH 2017 START*@
             <label>@Model.Status</label>
              @* Updated by Rajas on 2 MARCH 2017 END*@
        </div>
      
        </div>
      <hr />

         <div class = "row">
         <div class = "col-md-2">
            Shift <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field">
           @* @Html.EditorFor(model => model.ShiftId)*@
            @Html.DropDownListFor(a => a.ShiftId, (IEnumerable<SelectListItem>)@ViewBag.ShiftList, "Select", new { style = "width:250px;", @class = "form-control select2", disabled = "disabled" })
            @*@Html.ValidationMessageFor(model => model.ShiftId)*@
        </div>
        </div>
        <br/>

        @* Updated by Rajas on 18 JUNE 2017 START*@
        <div class="row">
         <div class = "col-md-2">
            Original Login Time
        </div>
        <div class="editor-field">
      <input type="text" name="Login" id="" readonly="readonly" disabled="disabled" value="@Model.Login.ToString("HH:mm:ss")" data-inputmask="'mask': ['', '99:99:99']" data-mask/>
        </div>
        </div>
        <br />
        @* Updated by Rajas on 18 JUNE 2017 END*@

         <div class="row">
         <div class = "col-md-2">
            Login Time <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field">
      <input type="text" name="Login" id="Login" value="" data-inputmask="'mask': ['', '99:99:99']" data-mask/>
        </div>
        </div>
        <br />

        @* Updated by Rajas on 18 JUNE 2017 START*@
              <div class = "row">
          <div class="col-md-2">
           Original LogOut Time
        </div>
        <div class="editor-field">
        <input type="text" name="LogOut" id="" readonly="readonly" disabled="disabled" value="@Model.LogOut.ToString("HH:mm:ss")" data-inputmask="'mask': ['', '99:99:99']" data-mask/>
        </div>
        </div>
        <br />
        @* Updated by Rajas on 18 JUNE 2017 END*@

        <div class = "row">
          <div class="col-md-2">
            LogOut Time <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field">
        <input type="text" name="LogOut" id="LogOut" value="" data-inputmask="'mask': ['', '99:99:99']" data-mask/>
        </div>
        </div>
        <br/>

        <div class="row">
          <div class="col-md-2">
            Reason <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field">
              @Html.DropDownList("Reason", new List<SelectListItem>() { new SelectListItem { Text = "Forgot To Punch", Value = "Forgot To Punch" }, new SelectListItem { Text = "Card Not Issued", Value = "Card Not Issued" }, new SelectListItem { Text = "Card Not brought", Value = "Card Not brought" }, new SelectListItem { Text = "Machine was Not Working", Value = "Machine was Not Working" }, new SelectListItem { Text = "Card not working", Value = "Card not working" }, new SelectListItem { Text = "Extended Shift", Value = "Extended Shift" }, new SelectListItem { Text = "Out Door Duty", Value = "Out Door Duty" }, new SelectListItem { Text = "Card lost", Value = "Card lost" }, new SelectListItem { Text = "Special Approval", Value = "Special Approval" } }, "Select", new { style = "width:250px;", @class = "form-control select2" })
           </div>
        </div>

        <div id="RemarkBox" style="display:none">
        <div class="editor-label">
            Remark <span style="color:Red;font-size:18px" >*</span>
        </div>
        <div class="editor-field">
                  @Html.TextAreaFor(model => model.Remark)
           
        </div>
       </div>

        <p>
            <input type="submit"  onclick="showloading();" id="savebtn" value="Save" class="btn btn-primary" />
        </p>
    </fieldset>
}

@*Commented by Pushkar on 4 FEB 2017 as was unwanted*@
@*<div>
    @Html.ActionLink("Back to List", "ExceptionEntryIndex")    
</div>*@


            <!-- /.box-body -->
          </div>
          <!-- /.box -->
           </div>
          <!-- /.box -->
      
      <!-- /.row -->
    </section>
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {

        // alert("ready");
        var active = $("#active").val();
        //alert(active);
        if (active == "False") {
            $("input").attr("disabled", "disabled");
            $("#Reason").attr("disabled", "disabled");

            $("#ShiftId").attr("disabled", "disabled");
            $("#savebtn").attr("disabled", "disabled");
        }
    });

    //alert("1");
    $('.back').click(function () {
        //alert("2");
        parent.history.back();
        return false;
    });

    $(function () {
        //Initialize Select2 Elements
        $(".select2").select2();

        //Datemask dd/mm/yyyy


        //Date picker
        $('.datepicker').datepicker({

            autoclose: true
        });

        // Added by Rajas on 29 JULY 2017 START
        // Handle garbage value in input textbox
        $("#Login").inputmask("h:s");  // ('placeholder':'hh,ss')
        $("#LogOut").inputmask("h:s");
        // Added by Rajas on 29 JULY 2017 END



        $("#Reason").change(function () {
            var reasonvalue = $("#Reason").val();
            if (reasonvalue == "Special Approval") {
                $("#RemarkBox").css("display", "inline");
            }
            else {
                $("#RemarkBox").css("display", "none");
            }
        });

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        });
        //Red color scheme for iCheck
        $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
            checkboxClass: 'icheckbox_minimal-red',
            radioClass: 'iradio_minimal-red'
        });
        //Flat red color scheme for iCheck
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        //Colorpicker
        $(".my-colorpicker1").colorpicker();
        //color picker with addon
        $(".my-colorpicker2").colorpicker();

        //Timepicker
        $(".timepicker").timepicker({
            showInputs: false
        });
    });


</script>
@* Added by Rajas on 2 MARCH 2017 for Data masking, START *@
<script src="@Url.Content("~/Scripts/jquery.inputmask.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.inputmask.date.extensions.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.inputmask.extensions.js")" type="text/javascript"></script>
<script type="text/javascript">

    $("[data-mask]").inputmask();

</script>
