@model WetosMVCMainApp.Models.COMPOffApplicationModel
@{
    ViewBag.Title = "Comp Off Application Create";
}
@*<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>*@
@System.Web.Optimization.Styles.Render("~/Content/DatePicker")
@System.Web.Optimization.Scripts.Render("~/bundles/DatePicker")
@System.Web.Optimization.Styles.Render("~/Content/Select2")
   @System.Web.Optimization.Scripts.Render("~/bundles/Select2")
<div class="page-content-wrapper" id="page_content">
    <div class="page-content">
        <section class="content-header">
      <h1>
       On behalf of Comp Off Application
        <small>Create</small>
      </h1>
     
     <div class="row">
                <div class="col-md-12">
                    <ul class="page-breadcrumb breadcrumb">
                        <li>
                            <i class="fa fa-home"></i>
                            <a href="@Url.Action("Index", "Home")">Home </a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                         <a href="#">Applications</a>
                            <i class="fa fa-angle-right"></i>
                        </li>
                        <li>
                            <a href="#">on Behalf of comp Of Application</a>
                        </li>
                        <li class="pull-right">
                            <div id="dashboard-report"  data-toggle="tooltip" title="Today's date">
                                <span style="cursor:pointer" class="back "  data-toggle="tooltip" title="Back" id="goback"><i class="fa fa-arrow-left"></i></span>
                                <i class="fa fa-calendar"></i>
                                <span>@DateTime.Now.ToLongDateString()</span>                           
                            </div>
                        </li>              
                    </ul>
                </div>
            </div>    
 
       @*Added by Pushkar For back breadcrumb on 24 OCT 2016----------Start*@
      
      <div style="clear: both;"></div>

       @*Added by Pushkar For back breadcrumb on 24 OCT 2016-----------End*@

 </section>
        <section class="content">

<div class="col-xs-12 col-md-12 col-lg-12">         
<div class="box box-primary">

<div class="box-body">

@using (Html.BeginForm())
{
     <div style="color:Red;font-size:12px">
   @Html.Raw(Server.HtmlDecode(Html.ValidationSummary(false).ToString())) 
   </div> 
     @* <div style="color:Red;font-size:12px">
 @Html.Raw(Server.HtmlDecode(Html.ValidationSummary(true).ToString()))  

   </div>   *@ 
    <fieldset>
    @* @Html.HiddenFor(a => a.FromDateStatus)
      @Html.HiddenFor(a => a.ToDateStatus)*@
       @Html.HiddenFor(a => a.Purpose)
         @Html.HiddenFor(a => a.StatusId)
          @Html.HiddenFor(a => a.RejectReason)
           @Html.HiddenFor(a => a.ExtrasHoursDate)
            @*<div class="row">
            <div class="col-md-3">
            <div class="editor-label">
           Company Name
        </div>
        <div class="editor-field">
         @Html.DropDownListFor(a => a.CompanyId, (IEnumerable<SelectListItem>)@ViewBag.CompanyList, "Select", new { @class = "form-control select2", id = "CompanyddlList" })
           @* @Html.EditorFor(model => model.CompanyId)
            @Html.ValidationMessageFor(model => model.CompanyId)
        </div>
        </div>
        <div class="col-md-4">
         <div class="editor-label">
            Branch Name
        </div>
        <div class="editor-field">
          @Html.DropDownListFor(a => a.BranchId, (IEnumerable<SelectListItem>)@ViewBag.BranchList, "Select", new { @class = "form-control select2", id = "BranchddlList" })
           @Html.EditorFor(model => model.BranchId)
            @Html.ValidationMessageFor(model => model.BranchId)
        </div>
        </div></div>
        <br />*@
        <div class="row">
        <div class="col-md-7">
        <div class="editor-label">
           Employee Name
        </div>
        <div class="editor-field">
          @Html.DropDownListFor(a => a.EmployeeId, (IEnumerable<SelectListItem>)@ViewBag.EmployeeCodeAndNameList, "Select", new { @class = "form-control select2", id = "EmployeeddlList" }) 
         
         @*, onchange = "location.href='@Url.Action('CompOffApplication', 'WetosApplicationForOther', new { EmployeeId  = '+ @model.EmployeeId +'})'" })*@

           @* @Html.EditorFor(model => model.EmployeeId)
            @Html.ValidationMessageFor(model => model.EmployeeId)*@
        </div></div></div><br />
           <div class="row">
        <div class="col-md-3">
         <div class="editor-label">
            From Date    @*<label> From Date :</label>*@</div>
             <div class="editor-field">
                <div class="input-group date">
                  <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                  </div>
                  @{var FromDate = Model.FromDate == null ? "" : Model.FromDate.Value.ToString("dd-MMM-yyyy");}
                   @Html.TextBoxFor(model => FromDate, new { @class = "form-control pull-right datepicker" })
                 @* <input type="text" class="form-control pull-right datepicker" id="FromDate" name="FromDate"/>*@
               </div>
                <!-- /.input group -->
       </div>
              </div>
             <div class="col-md-4">
              <div class="form-group">
              From Day Status
              @Html.DropDownListFor(a => a.FromDateStatus, (IEnumerable<SelectListItem>)ViewBag.LeaveTypeStatusList, "Select", new { @class = "form-control select2" })
              </div>
              </div></div><br />
                <div class="row">
                 <div class="col-md-3">
              <div class="editor-label">
             To Date   @*<label> To Date :</label>*@</div>
             <div class="editor-label">
                <div class="input-group date">
                  <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                  </div>
                   @{var ToDate = Model.ToDate == null ? "" : Model.ToDate.Value.ToString("dd-MMM-yyyy");}
                   @Html.TextBoxFor(model => ToDate, new { @class = "form-control pull-right datepicker" })
                      
                 @* <input type="text" class="form-control pull-right datepicker" id="ToDate" name="ToDate"/>*@
                </div>
                <!-- /.input group -->
              </div></div>
              
              <div class="col-md-4">
              <div class="form-group">
              To Day Status
              @Html.DropDownListFor(a => a.ToDateStatus, (IEnumerable<SelectListItem>)ViewBag.LeaveTypeStatusList, "Select", new { @class = "form-control select2" })
              </div>
              </div>
              </div>
              <br />
     @*   <div class="editor-label">
            @Html.LabelFor(model => model.FromDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FromDate)
            @Html.ValidationMessageFor(model => model.FromDate)
        </div>*@

       @* <div class="editor-label">
            @Html.LabelFor(model => model.FromDateStatus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FromDateStatus)
            @Html.ValidationMessageFor(model => model.FromDateStatus)
        </div>*@

        @*<div class="editor-label">
            @Html.LabelFor(model => model.ToDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ToDate)
            @Html.ValidationMessageFor(model => model.ToDate)
        </div>*@

       @* <div class="editor-label">
            @Html.LabelFor(model => model.ToDateStatus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ToDateStatus)
            @Html.ValidationMessageFor(model => model.ToDateStatus)
        </div>*@

        @*<div class="editor-label">
            @Html.LabelFor(model => model.Purpose)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Purpose)
            @Html.ValidationMessageFor(model => model.Purpose)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RejectReason)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RejectReason)
            @Html.ValidationMessageFor(model => model.RejectReason)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExtrasHoursDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtrasHoursDate)
            @Html.ValidationMessageFor(model => model.ExtrasHoursDate)
        </div>*@

       
       

        <p>
            <input type="submit" value="Create" class="btn btn-primary" />
        </p>


        @*ADDED BY SHRADDHA ON 07 JAN 2017 FOR ADDING ATTENDANCE STATUS TABLE START*@
         <div id="AttendanceStatus" class="col-md-12">
       <h4>Attendance Status
        </h4>
     
        <div>
        
        <span> Total Allowed CompOff Days </span> 
        
        <input type="text" id="TtlAllwdDys" name="TtlAllwdDys" style="text-align:right" readonly="readonly"/>
        
        </div>

       <table class="table table-striped" style="width: auto; height: auto;border:1px solid Black;border-collapse:inherit" >
       <tr>
       <td>C</td>
       <td>Work Date</td>
       <td>Shift</td>
       @*<td>In Time</td>
       <td>Out Time</td>
       *@
       <td>Extra Work Hrs</td>
       <td>Status</td>
       <td>CO Status</td>
     
       </tr>
       @for (var i = 0; i < @ViewBag.AttendanceStatusCountVB; i++)
       { 
        <tr>
       @{DateTime ValidDate = DateTime.Now.AddDays(-(Convert.ToInt32(@ViewBag.COValidityDays)));}
        <td> 
            @*Null-	Comp off available but not applied*@
            @*P-	Comp off applied for selected day but it is in pending state. You can not apply comp off against same day if pending entry is already available.*@
            @*S- 	Comp off applied for selected day and sanctioned. You can not apply comp off against same day if sanctioned entry is already available.*@
            @*C-	Comp off applied for selected day and cancelled. You can apply comp off against same day if cancelled entry is already available.*@
            @*R- 	Comp off applied for selected day and rejected. You can apply comp off for same day again.*@
            @*RM-	Manual comp off applied and sanctioned first then rejected. Because it is firstly sanctioned so comp off data entry is avaialable in comp off table. After that it is rejected.*@
            @*CM-	Manual comp off applied and sanctioned first then cancelled. Because it is firstly sanctioned so comp off data entry is avaialable in comp off table. After that it is cancelled.*@

        @if (ViewBag.AttendanceStatusListVB[i].AppStatus == null && ViewBag.AttendanceStatusListVB[i].CoDate == null)
        {
       
        @Html.CheckBox("CheckStatus", new { id = ViewBag.AttendanceStatusListVB[i].CompOffId, @value = ViewBag.AttendanceStatusListVB[i].CompOffId, @onchange = "CalculateDays(" + i + "," + ViewBag.AttendanceStatusListVB[i].CompOffId + ")" }) 
        }
        else
        {
          
        <span>@if (@ViewBag.AttendanceStatusListVB[i].AppStatus == "RM")
              { 
              <span>Rejected</span>
              }
              else if (@ViewBag.AttendanceStatusListVB[i].AppStatus == "CM")
              { 
              <span>Cancelled</span>
              }
              else if (@ViewBag.AttendanceStatusListVB[i].AppStatus == "P")
              { 
              <span>Applied</span>
              }
              else
              {
              @ViewBag.AttendanceStatusListVB[i].AppStatus
              
              }
               </span>
        }
        </td>
        <td><input disabled="disabled" type="text"id="WoDate_+@i" style="width:80px" value="@ViewBag.AttendanceStatusListVB[i].WoDate.ToString("dd-MMM-yyyy")"/>
       @*@ViewBag.AttendanceStatusListVB[i].WoDate.ToString("dd-MMM-yyyy")*@
        </td>
        <td><input disabled="disabled" type="text"id="ShiftId_+@i" style="width:80px" value="@ViewBag.AttendanceStatusListVB[i].ShiftId"/>
       @* @ViewBag.AttendanceStatusListVB[i].ShiftId*@
        </td>
       @* <td>
        <input disabled="disabled" type="text"id="LoginTime_+@i" style="width:80px" value="@ViewBag.AttendanceStatusListVB[i].LoginTime.ToShortTimeString()"/>
       
        </td>
        <td>
        <input disabled="disabled" type="text"id="LogOutTime_+@i" style="width:80px" value="@ViewBag.AttendanceStatusListVB[i].LogOutTime.ToShortTimeString()"/>
       
        </td>*@
      
       
        <td>
        <input disabled="disabled" type="text"id="CoHours_+@i" style="width:80px" value=" @ViewBag.AttendanceStatusListVB[i].CoHours.ToString("HH:mm:ss")"/>
       @* @ViewBag.AttendanceStatusListVB[i].CoHours.ToString("HH:mm:ss")*@
        </td>
        <td>
        @{string DayStatusStr = ViewBag.AttendanceStatusListVB[i].DayStatus == null ? "Full Day" : ViewBag.AttendanceStatusListVB[i].DayStatus;
       }
            
         <input disabled="disabled" type="text"id="DayStatus_+@i" style="width:80px" value="@DayStatusStr"/>
 
    
        </td>
        <td>
       
        @if (ViewBag.AttendanceStatusListVB[i].CoDate < ValidDate)
        {
            <input disabled="disabled" type="text"id="" style="width:80px" value="Lapsed"/>
        }
        else
        {
            <input disabled="disabled" type="text"id="" style="width:80px" value="Available"/>
        }
        </td>
     
       </tr>
       }

      
       </table>
       </div>
       @*ADDED BY SHRADDHA ON 07 JAN 2017 FOR ADDING ATTENDANCE STATUS TABLE END*@

    </fieldset>
}


</div> 
</div>
</div>

</section>
    </div>
</div>
@*Added by Pushkar For back breadcrumb on 24 OCT 2016-------start*@
<script type="text/javascript">
   
</script>
<script type="text/jscript">
    $(document).ready(function () {
        $('a.back').click(function () {
            parent.history.back();
            return false;
        });
    });

    function goBack() {
        window.history.back();
    }

    $(document).ready(function () {
        $("#TtlAllwdDys").prop('readonly', true);
    });

</script>
@*Added by Pushkar For back breadcrumb on 24 OCT 2016---------end*@
<script type="text/javascript">


    $(function () {
        //Initialize Select2 Elements
        $(".select2").select2();

        //Datemask dd/mm/yyyy


        //Date picker
        $('.datepicker').datepicker({
            format: "dd-M-yyyy",

            autoclose: true
        });

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        });
        //Red color scheme for iCheck
        $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
            checkboxClass: 'icheckbox_minimal-red',
            radioClass: 'iradio_minimal-red'
        });
        //Flat red color scheme for iCheck
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        //Colorpicker
        $(".my-colorpicker1").colorpicker();
        //color picker with addon
        $(".my-colorpicker2").colorpicker();

        //Timepicker
        $(".timepicker").timepicker({
            showInputs: false
        });
    });



    function CalculateDays(id, compoffid) {
        //alert(id);
        var PreviousValue = +$("#TtlAllwdDys").val();
        var xyz = document.getElementById(compoffid);
        //alert(xyz.checked);
        if (xyz.checked == true) {


            var DayStatus = document.getElementById("DayStatus_+" + id).value;

            //alert(DayStatus);

            if (DayStatus.trim() == "Full Day") {

                TtlAllwdDys = parseFloat(PreviousValue) + 1;
                $("#TtlAllwdDys").val(TtlAllwdDys);
            }
            else {
                // alert(DayStatus);
                TtlAllwdDys = parseFloat(PreviousValue) + 0.5;
                $("#TtlAllwdDys").val(TtlAllwdDys);
            }
            PreviousValue = TtlAllwdDys;
        }
        else {
            var DayStatus = document.getElementById("DayStatus_+" + id).value;

            //alert(DayStatus);

            if (DayStatus.trim() == "Full Day") {

                TtlAllwdDys = parseFloat(PreviousValue) - 1;
                $("#TtlAllwdDys").val(TtlAllwdDys);
            }
            else {
                // alert(DayStatus);
                TtlAllwdDys = parseFloat(PreviousValue) - 0.5;
                $("#TtlAllwdDys").val(TtlAllwdDys);
            }
            PreviousValue = TtlAllwdDys;
        }
    }

    // Added by Rajas on 15 JULY 2017 START
    // Trigger ToDate from FromDate
    $("#FromDate").change(function () {
        var fromdate = $("#FromDate").val();
        // alert(fromdate);
        $("#ToDate").val(fromdate).trigger('change');

    });

    $("#EmployeeddlList").change(function () {
        var EmployeeId = $("#EmployeeddlList").val();
        //alert(EmployeeId);
        showloading();
        window.location.href = '/WetosApplicationForOther/CompOffApplication/?EmployeeId=' + EmployeeId;

    });



    $(document).ready(function () {
        hideloading();


    });
    

</script>
