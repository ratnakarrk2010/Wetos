@model IEnumerable<WetosDB.SP_GetNotifications_Result>
@{
    ViewBag.Title = "Notification";
}
<div>
    <section class="content-header">
 <h1>
       Notification
        <small>Details</small>
      </h1>
      <ol class="breadcrumb">
      <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i> Home</a></li>
      @*<li class="active">Masters</li>
        <li><a href="@Url.Action("LeaveApplicationIndex", "WetosApplication")"><i class="fa fa-arrow-left"></i>Leave Application</a></li>
        <li><a href="#">Notification</a></li>*@
     
      </ol>

        @*Added by Pushkar For back breadcrumb on 24 OCT 2016----------Start*@
      <div>
      <span style="float:right"><a href="#" id="goback" class="fa fa-arrow-left back"></a></span>
     @* <span style="float:left">@Html.ActionLink("Add New Location", "Create")</span>*@

      </div>
      <div style="clear: both;"></div>

       @*Added by Pushkar For back breadcrumb on 24 OCT 2016-----------End*@

    </section>
</div>
<section class="content">
     
          <div class="box">
          <div class="box-header">
              @*<h3 class="box-title">Blood Group Details</h3>*@
            </div>

            <!-- /.box-header -->
            <div class="box-body">
<table class="table table-striped">
    <tr>
        <td style="width: 150px">
            Mark As Read
        </td>
        <td>
            Sent by
        </td>
        @*
        <td>
            @Html.DisplayNameFor(model => model.ToID)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.EmailNo)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.SendDate)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.ReadFlag)
        </td>
        <td>
            @Html.DisplayNameFor(model => model.ReadDate)
        </td>*@ @*<td>
            Message @Html.DisplayNameFor(model => model.NotificationContent)
        </td>
       @* <td>
        </td>*@
        <td>
            Subject
        </td>
        <td>
            Date
        </td>
    </tr>
    @foreach (var item in Model)
    {
        @Html.HiddenFor(model => item.NotificationID, new { @id = "NotificationID" })
        
        <tr>
            <td>
                @if (item.ReadFlag == false || item.ReadFlag == null)
                {
                    <a href="/Home/NotificationRead/@item.NotificationID">
                        <input type="checkbox" id="ReadMark" /></a>
                }
                else
                { 
                    <input type="checkbox" disabled="disabled" checked="checked" style="color: Green"
                        id="ReadMark1" />
                }
            </td>
            <td style="width: 150px">
                <a href="@Url.Action("NotificationContent", "Home", new { @NotificationID = item.NotificationID, style = "color:#337ab7 !important" })">
                    @Html.DisplayFor(modelItem => item.EmployeeName)
                </a>
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.ToID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SendDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReadFlag)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReadDate)
        </td>*@
            <td style="width: 800px">
              
                <a href="@Url.Action("NotificationContent", "Home", new { @NotificationID = item.NotificationID })">
                    @Html.DisplayFor(modelItem => item.NotificationContent)</a>
                
            </td>
            <td>
                <a href="@Url.Action("NotificationContent", "Home", new { @NotificationID = item.NotificationID })">
                    @{var SendDate = item.SendDate == null ? "" : item.SendDate.Value.ToString("dd-MMM-yyyy HH:mm:ss");}
                    @Html.DisplayFor(modelItem => SendDate)
                </a>
            </td>
            @* <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.NotificationID }) |
            @Html.ActionLink("Details", "Details", new { id=item.NotificationID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.NotificationID })
        </td>*@ @*<td style="width: 150px">
                @{ var ReadDateTime = item.ReadDate == null ? "" : item.ReadDate.Value.ToString("dd-MMM-yyyy hh:mm:ss"); }
                @if (item.ReadFlag == false || item.ReadFlag == null)
                {
                    @Html.ActionLink("Mark as Read", "NotificationRead", "Home", new { id = item.NotificationID }, new { @style = "background-color:Red;" }) 
                }
                else
                {
                    
                    @Html.DisplayFor(modelItem => ReadDateTime)
                }
            </td>*@
        </tr>
    
    }
</table>
<script type="text/jscript">
    $(document).ready(function () {
        $('a.back').click(function () {
            parent.history.back();
            return false;
        });
    });

    function goBack() {
        window.history.back();
    }
</script>
